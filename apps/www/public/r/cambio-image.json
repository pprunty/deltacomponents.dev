{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cambio-image",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "components/ui/cambio-image.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport { Cambio } from \"cambio\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype MotionPreset = \"snappy\" | \"smooth\" | \"bouncy\" | \"reduced\"\n\ninterface CambioImageProps {\n  src: string\n  alt: string\n  width: number\n  height: number\n  loading?: \"lazy\" | \"eager\"\n  index?: number\n  motion?:\n    | MotionPreset\n    | {\n        trigger?: MotionPreset\n        popup?: MotionPreset\n        backdrop?: MotionPreset\n      }\n  dismissible?: boolean\n  className?: string\n  draggable?: boolean\n  enableInitialAnimation?: boolean\n}\n\nexport function CambioImage({\n  src,\n  alt,\n  width,\n  height,\n  loading = \"lazy\",\n  index = 0,\n  motion = \"smooth\",\n  dismissible = true,\n  className,\n  draggable = false,\n  enableInitialAnimation = true,\n}: CambioImageProps) {\n  const [isVisible, setIsVisible] = useState(false)\n\n  /* NEW — track the zoom state */\n  const [open, setOpen] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n\n  /* Grace-period so the close animation can finish on top */\n  const handleOpenChange = (o: boolean) => {\n    setOpen(true) // keep it on top immediately\n    if (!o) setTimeout(() => setOpen(false), 400) // default \"smooth\" preset ≈ 300 ms\n  }\n\n  useEffect(() => {\n    if (!enableInitialAnimation) {\n      setIsVisible(true)\n      return\n    }\n\n    const io = new IntersectionObserver(\n      ([e]) => {\n        if (e.isIntersecting) {\n          setIsVisible(true)\n          io.disconnect()\n        }\n      },\n      { threshold: 0.1 }\n    )\n    if (ref.current) {\n      io.observe(ref.current)\n    }\n    return () => io.disconnect()\n  }, [enableInitialAnimation])\n\n  /* Massive z-index only while the item is zooming/closing */\n  const zIndex = open ? 999 : 10 + index\n\n  return (\n    <span\n      ref={ref}\n      className={cn(\n        \"relative inline-block w-full transition-all duration-500 ease-out\",\n        className\n      )}\n      style={{\n        opacity: enableInitialAnimation ? (isVisible ? 1 : 0) : 1,\n        filter: enableInitialAnimation\n          ? isVisible\n            ? \"blur(0)\"\n            : \"blur(4px)\"\n          : \"blur(0)\",\n        zIndex,\n      }}\n    >\n      {/* @ts-ignore */}\n      <Cambio.Root\n        motion={motion}\n        dismissible={dismissible}\n        open={open}\n        onOpenChange={handleOpenChange}\n      >\n        {/* @ts-ignore */}\n        <Cambio.Trigger className=\"relative w-full cursor-zoom-in overflow-hidden\">\n          <img\n            src={src}\n            alt={alt}\n            width={width}\n            height={height}\n            loading={loading}\n            draggable={draggable}\n            className={cn(\"h-auto w-full\", className)}\n            style={{ pointerEvents: \"none\" }}\n          />\n        </Cambio.Trigger>\n\n        {/* @ts-ignore */}\n        <Cambio.Portal>\n          {/* @ts-ignore */}\n          <Cambio.Backdrop className=\"fixed inset-0 z-[100] bg-black/40\" />\n          {/* @ts-ignore */}\n          <Cambio.Popup className=\"z-[101] w-full overflow-hidden md:w-[70%]\">\n            <img\n              src={src}\n              alt={alt}\n              width={width}\n              height={height}\n              loading=\"eager\"\n              draggable={draggable}\n              className=\"h-auto w-full object-contain\"\n              style={{ pointerEvents: \"none\" }}\n            />\n          </Cambio.Popup>\n        </Cambio.Portal>\n      </Cambio.Root>\n    </span>\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}