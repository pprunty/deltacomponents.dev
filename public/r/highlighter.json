{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "highlighter",
  "type": "registry:component",
  "files": [
    {
      "path": "registry/landing-page/highlighter.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst highlighterVariants = cva(\"bg-transparent font-extrabold\", {\n  variants: {\n    variant: {\n      default:\n        \"text-primary shadow-[inset_0_-0.5em_0_0_rgb(240,171,252)] dark:shadow-[inset_0_-0.5em_0_0_rgba(245,140,245,0.8)]\",\n      success:\n        \"text-primary shadow-[inset_0_-0.5em_0_0_rgba(132,204,22,0.5)] dark:shadow-[inset_0_-0.5em_0_0_rgba(132,204,22,0.4)]\",\n      info: \"text-primary shadow-[inset_0_-0.5em_0_0_rgba(56,189,248,0.5)] dark:shadow-[inset_0_-0.5em_0_0_rgba(56,189,248,0.4)]\",\n      warning:\n        \"text-primary shadow-[inset_0_-0.5em_0_0_rgba(250,204,21,0.5)] dark:shadow-[inset_0_-0.5em_0_0_rgba(250,204,21,0.4)]\",\n      destructive:\n        \"text-primary shadow-[inset_0_-0.5em_0_0_rgba(239,68,68,0.5)] dark:shadow-[inset_0_-0.5em_0_0_rgba(239,68,68,0.4)]\",\n    },\n    thickness: {\n      thin: \"shadow-[inset_0_-0.3em_0_0] dark:shadow-[inset_0_-0.3em_0_0]\",\n      default: \"shadow-[inset_0_-0.5em_0_0] dark:shadow-[inset_0_-0.5em_0_0]\",\n      thick: \"shadow-[inset_0_-0.7em_0_0] dark:shadow-[inset_0_-0.7em_0_0]\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    thickness: \"default\",\n  },\n})\n\nexport interface HighlighterProps extends React.HTMLAttributes<HTMLElement>, VariantProps<typeof highlighterVariants> {\n  asChild?: boolean\n  shadowColor?: string\n  darkShadowColor?: string\n}\n\nconst Highlighter = React.forwardRef<HTMLElement, HighlighterProps>(\n  ({ className, variant, thickness, asChild = false, shadowColor, darkShadowColor, style, ...props }, ref) => {\n    const Comp = asChild ? React.Fragment : \"mark\"\n\n    // Create custom shadow styles if shadowColor is provided\n    const customStyle = shadowColor\n      ? {\n          ...style,\n          \"--highlight-shadow-color\": shadowColor,\n          \"--highlight-dark-shadow-color\": darkShadowColor || shadowColor,\n        }\n      : style\n\n    // Apply custom shadow class if shadowColor is provided\n    const customShadowClass = shadowColor\n      ? \"shadow-[inset_0_-0.5em_0_0_var(--highlight-shadow-color)] dark:shadow-[inset_0_-0.5em_0_0_var(--highlight-dark-shadow-color)]\"\n      : undefined\n\n    return (\n      <Comp\n        ref={ref}\n        className={cn(\n          highlighterVariants({ variant: shadowColor ? undefined : variant, thickness, className }),\n          customShadowClass,\n        )}\n        style={customStyle}\n        {...props}\n      />\n    )\n  },\n)\nHighlighter.displayName = \"Highlighter\"\n\nexport { Highlighter, highlighterVariants }\n",
      "type": "registry:component"
    }
  ]
}