{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "qr-code",
  "type": "registry:component",
  "files": [
    {
      "path": "registry/media/qr-code.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\n// @ts-expect-error: No type definitions for 'qrcode' available\nimport { toCanvas } from \"qrcode\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface QRCodeProps {\n  value: string\n  size?: number\n  bgColor?: string // Can be a CSS variable (e.g. --color-card) or a color value\n  fgColor?: string // Can be a CSS variable (e.g. --color-primary-foreground) or a color value\n  errorCorrectionLevel?: \"L\" | \"M\" | \"Q\" | \"H\"\n  margin?: number\n  className?: string\n  containerClassName?: string\n}\n\n// Helper to resolve CSS variable or direct color\nfunction resolveColor(color?: string, fallback?: string) {\n  if (!color) return fallback\n  if (color.startsWith(\"--\")) {\n    if (typeof window !== \"undefined\") {\n      const value = getComputedStyle(document.documentElement).getPropertyValue(\n        color\n      )\n      if (value) return value.trim()\n    }\n    return fallback\n  }\n  return color\n}\n\nexport default function QRCode({\n  value,\n  size = 200,\n  // Use shadcn theme variables for best contrast by default\n  bgColor = \"--color-card\", // background\n  fgColor = \"--color-card-foreground\", // foreground (text/qr dots)\n  errorCorrectionLevel = \"M\",\n  margin = 4,\n  className,\n  containerClassName,\n}: QRCodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [hasError, setHasError] = useState(false)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas || !value) return\n\n    setIsLoading(true)\n    setHasError(false)\n\n    // Always resolve to actual color values\n    const resolvedBgColor = resolveColor(bgColor, \"#ffffff00\") // fallback: transparent\n    const resolvedFgColor = resolveColor(fgColor, \"#000000\") // fallback: black\n\n    toCanvas(\n      canvas,\n      value,\n      {\n        width: size,\n        margin,\n        color: {\n          dark: resolvedFgColor,\n          light: resolvedBgColor,\n        },\n        errorCorrectionLevel,\n      },\n      (error: unknown) => {\n        if (error) {\n          console.error(\"QR Code generation error:\", error)\n          setHasError(true)\n        }\n        setIsLoading(false)\n      }\n    )\n  }, [value, size, bgColor, fgColor, errorCorrectionLevel, margin])\n\n  if (!value) {\n    return (\n      <div\n        className={cn(\n          \"flex items-center justify-center border-2 border-dashed border-gray-300 text-gray-500 rounded-xl\",\n          containerClassName\n        )}\n        style={{ width: size + 32, height: size + 32 }}\n      >\n        No data provided\n      </div>\n    )\n  }\n\n  if (hasError) {\n    return (\n      <div\n        className={cn(\n          \"flex flex-col items-center justify-center border-2 border-dashed border-red-300 text-red-500 rounded-xl p-4\",\n          containerClassName\n        )}\n        style={{ width: size + 32, height: size + 32 }}\n      >\n        <svg\n          className=\"w-8 h-8 mb-2\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n          />\n        </svg>\n        <span className=\"text-sm\">Failed to generate QR code</span>\n      </div>\n    )\n  }\n\n  // Use the resolved background color for the container, or transparent if not found\n  const containerBg = resolveColor(bgColor, \"transparent\")\n\n  return (\n    <div\n      className={cn(\n        \"inline-block p-4 rounded-xl shadow-lg relative\",\n        containerClassName\n      )}\n      style={{ backgroundColor: containerBg }}\n    >\n      {/* Container for both SVG and canvas to ensure same positioning */}\n      <div className=\"relative\" style={{ width: size, height: size }}>\n        {/* Loading SVG placeholder - positioned absolutely to match canvas exactly */}\n        {isLoading && (\n          <div\n            className=\"absolute top-0 left-0 flex items-center justify-center\"\n            style={{ width: size, height: size }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 368 368\"\n              className=\"opacity-30 animate-pulse rounded-lg\"\n              style={{\n                width: `${size - margin * 8}px`,\n                height: `${size - margin * 8}px`,\n              }}\n            >\n              <path\n                d=\"m 16,16 0,16 0,16 0,16 0,16 0,16 0,16 0,16 16,0 16,0 16,0 16,0 16,0 16,0 16,0 0,-16 0,-16 0,-16 0,-16 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 -16,0 -16,0 -16,0 -16,0 z m 128,0 0,16 0,16 16,0 0,-16 16,0 0,-16 -16,0 -16,0 z m 32,16 0,16 16,0 0,-16 -16,0 z m 16,16 0,16 16,0 16,0 0,-16 0,-16 0,-16 -16,0 0,16 0,16 -16,0 z m 0,16 -16,0 -16,0 -16,0 0,16 16,0 16,0 0,16 -16,0 0,16 16,0 0,16 16,0 0,-16 16,0 0,16 -16,0 0,16 -16,0 0,16 16,0 16,0 0,16 16,0 0,-16 0,-16 0,-16 0,-16 0,-16 -16,0 0,-16 -16,0 0,-16 z m 16,112 -16,0 0,16 -16,0 0,16 0,16 16,0 0,16 0,16 -16,0 -16,0 0,-16 16,0 0,-16 -16,0 0,-16 0,-16 -16,0 0,-16 16,0 0,16 16,0 0,-16 0,-16 -16,0 -16,0 0,-16 -16,0 -16,0 -16,0 0,16 -16,0 0,16 -16,0 0,-16 16,0 0,-16 -16,0 -16,0 0,16 -16,0 0,16 0,16 0,16 16,0 0,-16 16,0 16,0 16,0 0,-16 16,0 0,-16 16,0 0,16 -16,0 0,16 16,0 0,16 -16,0 0,16 16,0 16,0 0,16 0,16 0,16 16,0 0,16 16,0 16,0 16,0 0,16 -16,0 -16,0 -16,0 0,-16 -16,0 0,16 0,16 16,0 0,16 -16,0 0,16 16,0 16,0 0,-16 16,0 0,16 16,0 16,0 16,0 16,0 0,-16 16,0 0,16 16,0 16,0 16,0 0,-16 -16,0 -16,0 0,-16 -16,0 0,-16 -16,0 0,16 -16,0 -16,0 0,16 -16,0 0,-16 16,0 0,-16 0,-16 0,-16 16,0 0,-16 -16,0 -16,0 0,-16 16,0 0,-16 0,-16 0,-16 -16,0 0,-16 z m 48,128 0,-16 -16,0 0,16 16,0 z m 32,16 16,0 16,0 0,-16 -16,0 -16,0 0,16 z m 32,-16 16,0 0,-16 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 0,-16 -16,0 0,16 -16,0 0,16 0,16 16,0 0,-16 16,0 0,16 0,16 16,0 16,0 0,16 z m -48,-80 0,-16 -16,0 -16,0 0,16 16,0 16,0 z m 16,0 16,0 0,-16 0,-16 0,-16 16,0 0,16 16,0 0,16 16,0 0,-16 0,-16 -16,0 0,-16 16,0 0,-16 -16,0 -16,0 0,16 -16,0 0,-16 -16,0 0,16 -16,0 0,16 16,0 0,16 0,16 0,16 z m -16,-48 -16,0 0,16 16,0 0,-16 z m 64,32 -16,0 0,16 16,0 0,-16 z m -224,0 0,-16 -16,0 0,16 16,0 z m -16,0 -16,0 -16,0 -16,0 0,16 16,0 16,0 16,0 0,-16 z m -64,0 -16,0 0,16 16,0 0,-16 z m 0,-48 0,-16 -16,0 0,16 16,0 z m 112,-16 16,0 0,-16 0,-16 -16,0 0,16 0,16 z m 96,-128 0,16 0,16 0,16 0,16 0,16 0,16 0,16 16,0 16,0 16,0 16,0 16,0 16,0 16,0 0,-16 0,-16 0,-16 0,-16 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 -16,0 -16,0 -16,0 -16,0 z m -208,16 16,0 16,0 16,0 16,0 16,0 0,16 0,16 0,16 0,16 0,16 -16,0 -16,0 -16,0 -16,0 -16,0 0,-16 0,-16 0,-16 0,-16 0,-16 z m 224,0 16,0 16,0 16,0 16,0 16,0 0,16 0,16 0,16 0,16 0,16 -16,0 -16,0 -16,0 -16,0 -16,0 0,-16 0,-16 0,-16 0,-16 0,-16 z m -208,16 0,16 0,16 0,16 16,0 16,0 16,0 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 z m 224,0 0,16 0,16 0,16 16,0 16,0 16,0 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 z m -32,96 0,16 16,0 0,-16 -16,0 z m -224,96 0,16 0,16 0,16 0,16 0,16 0,16 0,16 16,0 16,0 16,0 16,0 16,0 16,0 16,0 0,-16 0,-16 0,-16 0,-16 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 -16,0 -16,0 -16,0 -16,0 z m 16,16 16,0 16,0 16,0 16,0 16,0 0,16 0,16 0,16 0,16 0,16 -16,0 -16,0 -16,0 -16,0 -16,0 0,-16 0,-16 0,-16 0,-16 0,-16 z m 16,16 0,16 0,16 0,16 16,0 16,0 16,0 0,-16 0,-16 0,-16 -16,0 -16,0 -16,0 z m 288,48 0,16 16,0 0,-16 -16,0 z\"\n                fill=\"currentColor\"\n                className=\"text-gray-400 dark:text-gray-600\"\n              />\n            </svg>\n          </div>\n        )}\n\n        {/* Actual QR code canvas - positioned absolutely to match SVG exactly */}\n        <canvas\n          ref={canvasRef}\n          className={cn(\n            \"absolute top-0 left-0 block rounded-lg transition-opacity duration-200\",\n            isLoading ? \"opacity-0\" : \"opacity-100\",\n            className\n          )}\n          style={{ width: size, height: size, maxWidth: \"100%\" }}\n        />\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    }
  ]
}
