{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "neobrutalism-card",
  "type": "registry:component",
  "title": "Neobrutalism Card (neobrutalism.dev)",
  "description": "A component for neobrutalism-card",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "delta/open-source-inspired-collection/neobrutalism-card.tsx",
      "content": "import React from 'react';\nimport { cn } from '@/lib/utils';\n\ntype CardProps = React.HTMLAttributes<HTMLDivElement> & {\n  color?: 'blue' | 'pink' | 'green' | 'yellow' | 'purple' | 'gray';\n  hover?: boolean;\n};\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, color = 'blue', hover = false, children, ...props }, ref) => {\n    const colorStyles = {\n      blue: 'bg-blue-300',\n      pink: 'bg-pink-300',\n      green: 'bg-green-300',\n      yellow: 'bg-yellow-300',\n      purple: 'bg-purple-300',\n      gray: 'bg-gray-300',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] dark:shadow-[4px_4px_0px_0px_rgba(255,255,255,0.8)] border-2 border-black',\n          colorStyles[color],\n          'text-black',\n          hover &&\n            'transition-all duration-200 hover:translate-y-1 hover:translate-x-1 hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)] dark:hover:shadow-[2px_2px_0px_0px_rgba(255,255,255,0.8)] active:translate-y-1 active:translate-x-1 active:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)] dark:active:shadow-[2px_2px_0px_0px_rgba(255,255,255,0.8)]',\n          className,\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  },\n);\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn('text-2xl font-bold tracking-tight', className)}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-black/80 mt-2', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n};\n",
      "type": "registry:component",
      "target": "delta/components/neobrutalism-card.tsx"
    },
    {
      "path": "delta/open-source-inspired-collection/neobrutalism-card-demo.tsx",
      "content": "'use client';\n\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n} from '@/delta/open-source-inspired-collection/neobrutalism-card';\n\nexport default function NeobrutalismCardDemo() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-wrap gap-6 justify-center\">\n        <BlueCardDemo />\n        <PinkCardDemo />\n        <GreenCardDemo />\n        <YellowCardDemo />\n        <PurpleCardDemo />\n        <GrayCardDemo />\n      </div>\n      <div className=\"mt-8 flex justify-center\">\n        <CompleteExampleDemo />\n      </div>\n    </div>\n  );\n}\n\nexport function BlueCardDemo() {\n  return (\n    <Card color=\"blue\" className=\"w-64\" hover={true}>\n      <CardHeader>\n        <CardTitle>Blue Card</CardTitle>\n        <CardDescription>Default blue variant</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>This card has hover and active states. Click to see active state.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function PinkCardDemo() {\n  return (\n    <Card color=\"pink\" className=\"w-64\" hover={true}>\n      <CardHeader>\n        <CardTitle>Pink Card</CardTitle>\n        <CardDescription>Pink variant</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>A pink version with hover and active states.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function GreenCardDemo() {\n  return (\n    <Card color=\"green\" className=\"w-64\" hover={true}>\n      <CardHeader>\n        <CardTitle>Green Card</CardTitle>\n        <CardDescription>Green variant</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>A green version with hover and active states.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function YellowCardDemo() {\n  return (\n    <Card color=\"yellow\" className=\"w-64\" hover={false}>\n      <CardHeader>\n        <CardTitle>Yellow Card</CardTitle>\n        <CardDescription>Yellow variant</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>This card has no hover effect.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function PurpleCardDemo() {\n  return (\n    <Card color=\"purple\" className=\"w-64\" hover={true}>\n      <CardHeader>\n        <CardTitle>Purple Card</CardTitle>\n        <CardDescription>Purple variant</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>This card has hover effect.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function GrayCardDemo() {\n  return (\n    <Card color=\"gray\" className=\"w-64\" hover={false}>\n      <CardHeader>\n        <CardTitle>Gray Card</CardTitle>\n        <CardDescription>Gray variant</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>This card has no hover states.</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function CompleteExampleDemo() {\n  return (\n    <div className=\"w-full flex justify-center\">\n      <Card color=\"blue\" className=\"w-full max-w-sm\" hover={false}>\n        <CardHeader>\n          <CardTitle>Create project</CardTitle>\n          <CardDescription>Deploy your new project in one-click.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid w-full items-center gap-4\">\n            <div className=\"flex flex-col space-y-1.5\">\n              <label htmlFor=\"name\" className=\"text-sm font-medium\">\n                Name\n              </label>\n              <input\n                id=\"name\"\n                placeholder=\"Name of your project\"\n                className=\"flex h-10 w-full rounded-md border-2 border-black bg-white px-3 py-2 text-md shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-1.5\">\n              <label htmlFor=\"framework\" className=\"text-sm font-medium\">\n                Framework\n              </label>\n              <div className=\"relative\">\n                <select\n                  id=\"framework\"\n                  className=\"flex h-10 w-full appearance-none rounded-md border-2 border-black bg-white px-3 py-2 text-md shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]\"\n                >\n                  <option>Select</option>\n                </select>\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-3\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <polyline points=\"6 9 12 15 18 9\"></polyline>\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n        <CardFooter className=\"flex justify-between\">\n          <button className=\"inline-flex items-center justify-center rounded-md border-2 border-black bg-white px-4 py-2 text-sm font-medium shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)] hover:translate-y-1 hover:translate-x-1 hover:shadow-none active:translate-y-1 active:translate-x-1 active:shadow-none transition-all\">\n            Cancel\n          </button>\n          <button className=\"inline-flex items-center justify-center rounded-md border-2 border-black bg-black text-white px-4 py-2 text-sm font-medium shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)] hover:translate-y-1 hover:translate-x-1 hover:shadow-none active:translate-y-1 active:translate-x-1 active:shadow-none transition-all\">\n            Deploy\n          </button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/components/neobrutalism-card-demo.tsx"
    }
  ]
}