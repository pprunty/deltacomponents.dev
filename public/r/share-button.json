{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "share-button",
  "type": "registry:component",
  "title": "Native Share Button",
  "description": "A component for share-button",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "delta/components/share-button.tsx",
      "content": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport { Export, Check } from \"@phosphor-icons/react\"\nimport { Button, type ButtonProps, type ButtonVariant } from \"./button\"\n\nexport interface ShareButtonProps extends Omit<ButtonProps, \"onClick\"> {\n  /**\n   * Optional custom message for sharing\n   */\n  message?: string\n  /**\n   * Optional title override for share dialog\n   */\n  title?: string\n  /**\n   * Optional URL to share (defaults to current URL)\n   */\n  url?: string\n  /**\n   * Optional tooltip text\n   */\n  tooltip?: string\n  /**\n   * Optional notification position\n   */\n  notificationPosition?: \"top\" | \"bottom\"\n  /**\n   * Optional notification duration in ms\n   */\n  notificationDuration?: number\n  /**\n   * Use native share API on desktop instead of clipboard popup\n   * @default true\n   */\n  nativeShareOnDesktop?: boolean\n  /**\n   * Whether to show the title text beside the icon\n   * @default false\n   */\n  showTitle?: boolean\n  /**\n   * Button variant\n   * @default \"default\"\n   */\n  variant?: ButtonVariant\n}\n\nexport default function ShareButton({\n  message = \"Check out this page: \",\n  title,\n  url,\n  tooltip = \"Share this page\",\n  className,\n  notificationPosition = \"top\",\n  notificationDuration = 2000,\n  nativeShareOnDesktop = true,\n  children,\n  showTitle = false,\n  variant = \"secondary\",\n  ...props\n}: ShareButtonProps) {\n  const [isNotificationVisible, setIsNotificationVisible] = useState(false)\n  const [pageUrl, setPageUrl] = useState(\"\")\n  const [pageTitle, setPageTitle] = useState(\"\")\n  const [isMounted, setIsMounted] = useState(false)\n\n  useEffect(() => {\n    setIsMounted(true)\n    setPageUrl(url || window.location.href)\n    setPageTitle(title || document.title)\n  }, [url, title])\n\n  const isDesktopDevice = () => window.innerWidth >= 1024\n\n  const handleShare = async () => {\n    if (!isMounted) return\n\n    const shareData = {\n      title: pageTitle,\n      text: message,\n      url: pageUrl,\n    }\n\n    // Use native share if available and either not desktop or nativeShareOnDesktop is true\n    if (navigator.share && (!isDesktopDevice() || nativeShareOnDesktop)) {\n      try {\n        await navigator.share(shareData)\n      } catch (error) {\n        if ((error as Error).name !== 'AbortError') {\n          console.error('Error sharing:', error)\n          // Fallback to clipboard if native share fails\n          await copyToClipboard()\n        }\n      }\n    } else {\n      // Fallback to copying the URL\n      await copyToClipboard()\n    }\n  }\n\n  // Extract clipboard copy logic to separate function\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pageUrl)\n      setIsNotificationVisible(true)\n      setTimeout(() => setIsNotificationVisible(false), notificationDuration)\n    } catch (error) {\n      console.error('Failed to copy URL:', error)\n    }\n  }\n\n  if (!isMounted) {\n    return null // Prevent SSR issues\n  }\n\n  return (\n    <>\n      <Button\n        onClick={handleShare}\n        className={className}\n        title={title || undefined}\n        variant={variant}\n        {...props}\n      >\n        {isNotificationVisible ? (\n          <div className=\"flex items-center gap-2\">\n            <Check weight=\"bold\" size={20} />\n            {showTitle && title && <span className=\"text-sm\">{title}</span>}\n          </div>\n        ) : children ? (\n          children\n        ) : (\n          <div className=\"flex items-center gap-2\">\n            <Export weight=\"bold\" size={20} />\n            {showTitle && title && <span className=\"text-sm\">{title}</span>}\n          </div>\n        )}\n      </Button>\n\n      {/* Toast notification with improved animations and contrasting colors */}\n      <div\n        className={cn(\n          \"fixed left-1/2 -translate-x-1/2 transform z-50 transition-all duration-300 ease-in-out\",\n          \"w-[300px] sm:w-[700px]\",\n          \"flex items-center justify-center\",\n          \"bg-foreground text-background\",\n          \"px-4 py-3\",\n          notificationPosition === \"top\" \n            ? \"top-4 animate-in fade-in slide-in-from-top-5\" \n            : \"bottom-4 animate-in fade-in slide-in-from-bottom-5\",\n          isNotificationVisible \n            ? \"opacity-100 scale-100\" \n            : \"opacity-0 scale-95 pointer-events-none\"\n        )}\n        role=\"alert\"\n        aria-live=\"polite\"\n      >\n        <Check weight=\"bold\" className=\"mr-2 h-4 w-4 text-background\" />\n        <p className=\"text-sm font-medium\">Link copied to clipboard</p>\n      </div>\n    </>\n  )\n}\n",
      "type": "registry:component",
      "target": "delta/components/share-button.tsx"
    },
    {
      "path": "delta/examples/share-button-basic-demo.tsx",
      "content": "\"use client\"\n\nimport ShareButton from \"@/delta/components/share-button\"\n\nexport default function ShareButtonBasicDemo() {\n  return (\n    <div className=\"flex items-center justify-center p-4\">\n      <ShareButton \n        tooltip=\"Share this content\"\n        size=\"md\"\n        nativeShareOnDesktop={false}\n        url=\"https://deltacomponents.dev\"\n        message=\"Check out Delta Components, a modern React UI library: \"\n      />\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "delta/examples/share-button-basic-demo.tsx"
    },
    {
      "path": "content/docs/share-button.mdx",
      "content": "export const metadata = {\n  title: 'ShareButton | Delta Components',\n  description: 'A versatile share button component that uses the Web Share API with a copy-to-clipboard fallback. Integrates seamlessly with modern web applications and supports customization for various use cases.',\n\n  // Keywords help with SEO\n  keywords: ['shadcn/ui', 'react', 'share button', 'web share api', 'delta components', 'ui components', 'nextjs components', 'tailwind components'],\n\n  // Canonical URL to prevent duplicate content issues\n  alternates: {\n    canonical: 'https://deltacomponents.dev/docs/share-button',\n  },\n\n  // Category helps with structured data\n  category: 'component',\n\n  openGraph: {\n    title: 'ShareButton Component | Delta Components',\n    description: 'A versatile share button component that uses the Web Share API with a copy-to-clipboard fallback. Perfect for enhancing user engagement and social sharing.',\n    type: 'article',\n    url: 'https://deltacomponents.dev/docs/share-button',\n    images: [\n      {\n        url: 'https://deltacomponents.dev/og/share-button.png',\n        width: 1200,\n        height: 630,\n        alt: 'ShareButton Component Preview showing different variants and sizes'\n      }\n    ],\n    // Article specific OpenGraph metadata\n    article: {\n      authors: ['Patrick Prunty'],\n      tags: ['UI Components', 'React', 'Sharing', 'Web Share API'],\n      section: 'Components'\n    },\n    siteName: 'Delta Components'\n  },\n}\n\n# ShareButton\n\nA versatile share button component that leverages the Web Share API for mobile devices and falls back to clipboard copy functionality for desktop browsers.\n\n## Basic Usage\n\n<ComponentTabs name=\"share-button-basic\" />\n\n<InstallationInstructions componentName=\"share-button\" />\n\n## Features\n\n- **Native Share API Support**: Uses the Web Share API on compatible devices for a native sharing experience\n- **Copy to Clipboard Fallback**: Falls back to copying the URL to clipboard on desktop or unsupported browsers\n- **Visual Feedback**: Shows a confirmation message after successful copy operations\n- **Customizable**: Supports custom messages, URLs, styles, and icons\n- **Accessibility**: Fully accessible with proper ARIA attributes\n- **Flexible Desktop Behavior**: Option to use native share API on desktop or default clipboard copy\n\n## Props\n\n<Table>\n  <TableHeader>\n    <TableRow>\n      <TableHead>Prop</TableHead>\n      <TableHead>Type</TableHead>\n      <TableHead>Default</TableHead>\n      <TableHead>Description</TableHead>\n    </TableRow>\n  </TableHeader>\n  <TableBody>\n    <TableRow>\n      <TableCell>`title`</TableCell>\n      <TableCell>`string`</TableCell>\n      <TableCell>document.title</TableCell>\n      <TableCell>Title to use in the share dialog</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`url`</TableCell>\n      <TableCell>`string`</TableCell>\n      <TableCell>current URL</TableCell>\n      <TableCell>URL to share (defaults to current page URL)</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`tooltip`</TableCell>\n      <TableCell>`string`</TableCell>\n      <TableCell>`\"Share this page\"`</TableCell>\n      <TableCell>Tooltip text for the button</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`className`</TableCell>\n      <TableCell>`string`</TableCell>\n      <TableCell>-</TableCell>\n      <TableCell>Additional CSS classes</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`icon`</TableCell>\n      <TableCell>`ReactNode`</TableCell>\n      <TableCell>Export icon</TableCell>\n      <TableCell>Custom icon element (deprecated, use children instead)</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`children`</TableCell>\n      <TableCell>`ReactNode`</TableCell>\n      <TableCell>-</TableCell>\n      <TableCell>Custom content to render inside the button</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`variant`</TableCell>\n      <TableCell>`\"default\" | \"outline\" | \"ghost\"`</TableCell>\n      <TableCell>`\"default\"`</TableCell>\n      <TableCell>Button style variant</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`size`</TableCell>\n      <TableCell>`\"sm\" | \"md\" | \"lg\"`</TableCell>\n      <TableCell>`\"md\"`</TableCell>\n      <TableCell>Button size</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`notificationPosition`</TableCell>\n      <TableCell>`\"top\" | \"bottom\"`</TableCell>\n      <TableCell>`\"top\"`</TableCell>\n      <TableCell>Position of the notification</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`notificationDuration`</TableCell>\n      <TableCell>`number`</TableCell>\n      <TableCell>`2000`</TableCell>\n      <TableCell>Duration of notification in milliseconds</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`nativeShareOnDesktop`</TableCell>\n      <TableCell>`boolean`</TableCell>\n      <TableCell>`true`</TableCell>\n      <TableCell>Force using native share API on desktop instead of clipboard copy</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>`showTitle`</TableCell>\n      <TableCell>`boolean`</TableCell>\n      <TableCell>`false`</TableCell>\n      <TableCell>Whether to show the title text beside the icon</TableCell>\n    </TableRow>\n  </TableBody>\n</Table>\n\n## Usage Examples\n\n### Basic Share Button\n\n```tsx\nimport { ShareButton } from \"@/components/ui/share-button\";\n\nexport default function ShareExample() {\n  return <ShareButton />;\n}\n```\n\n### Custom Content and Styling\n\n```tsx\nimport { ShareButton } from \"@/components/ui/share-button\";\nimport { Share } from \"@phosphor-icons/react\";\n\nexport default function ShareExample() {\n  return (\n    <ShareButton \n      tooltip=\"Share this content\"\n      className=\"hover:bg-blue-100 dark:hover:bg-blue-900/30\"\n    >\n      <div className=\"flex items-center gap-2\">\n        <Share weight=\"bold\" size={24} />\n        <span>Share</span>\n      </div>\n    </ShareButton>\n  );\n}\n```\n\n### Custom Icon and Styling (Legacy)\n\n```tsx\nimport { ShareButton } from \"@/components/ui/share-button\";\nimport { Share } from \"@phosphor-icons/react\";\n\nexport default function ShareExample() {\n  return (\n    <ShareButton \n      icon={<Share weight=\"bold\" size={24} />}\n      variant=\"outline\"\n      size=\"lg\"\n      className=\"hover:bg-blue-100 dark:hover:bg-blue-900/30\"\n    />\n  );\n}\n```\n\n### Custom URL and Message\n\n```tsx\nimport { ShareButton } from \"@/components/ui/share-button\";\n\nexport default function ShareExample() {\n  return (\n    <ShareButton \n      url=\"https://deltacomponents.dev\"\n      message=\"Check out Delta Components, a modern UI component library: \"\n      title=\"Delta Components\"\n    >\n      <div className=\"flex items-center gap-2\">\n        <span>Share Delta Components</span>\n      </div>\n    </ShareButton>\n  );\n}\n```\n\n### Native Share API on Desktop\n\n```tsx\nimport { ShareButton } from \"@/components/ui/share-button\";\n\nexport default function ShareExample() {\n  return (\n    <ShareButton \n      nativeShareOnDesktop={true}\n      tooltip=\"Share using native dialog\"\n    >\n      <div className=\"flex items-center gap-2\">\n        <span>Share with Native Dialog</span>\n      </div>\n    </ShareButton>\n  );\n}\n```\n\n### Non-Native Share on Desktop\n\n<ComponentTabs name=\"share-button-popover\" />\n\n### Share Button with Title\n\n```tsx\nimport { ShareButton } from \"@/components/ui/share-button\";\n\nexport default function ShareExample() {\n  return (\n    <ShareButton \n      title=\"Share this page\"\n      showTitle={true}\n      tooltip=\"Share this content\"\n    />\n  );\n}\n```\n\n## Browser Compatibility\n\nThe Web Share API is supported in:\n- Chrome for Android (61+)\n- Safari for iOS (12.2+)\n- Safari on macOS (Monterey+)\n- Chrome on desktop (89+)\n- Edge (79+)\n- Opera (76+)\n\nOn unsupported browsers or when `nativeShareOnDesktop` is `false` on desktop, the component falls back to copying the URL to clipboard and displaying a notification.\n\n## Accessibility\n\nThe ShareButton component follows accessibility best practices:\n\n- Includes proper `aria-label` attributes\n- Uses semantic HTML for the button element\n- Provides visual feedback on successful actions\n- Maintains focus management best practices\n- Uses appropriate color contrast ratios\n",
      "type": "registry:component",
      "target": "content/docs/share-button.mdx"
    },
    {
      "path": "delta/examples/share-button-popover-demo.tsx",
      "content": "\"use client\"\n\nimport ShareButton from \"@/delta/components/share-button\"\nimport { Share } from \"@phosphor-icons/react\"\n\nexport default function ShareButtonPopoverDemo() {\n  return (\n    <div className=\"flex items-center justify-center p-4\">\n      <ShareButton\n        tooltip=\"Share this content\"\n        size=\"md\"\n        title=\"Share\"\n        variant=\"ghost\"\n        showTitle={true}\n        className=\"[&>div>span]:text-sm\"\n        nativeShareOnDesktop={false}\n        url=\"https://deltacomponents.dev\"\n        message=\"Check out Delta Components, a modern React UI library: \"\n      />\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "delta/examples/share-button-popover-demo.tsx"
    }
  ]
}