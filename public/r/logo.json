{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "logo",
  "type": "registry:component",
  "title": "Logo",
  "description": "A component for logo",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "delta/layout/logo.tsx",
      "content": "\"use client\"\n\nimport Image from \"next/image\"\nimport { useState } from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport Link from \"next/link\"\n\n// Hardcoded logo configuration\nconst DEFAULT_LOGO_CONFIG = {\n  src: \"/logo.svg\",\n  fallbackSrc: \"/placeholder-logo.svg\",\n  alt: \"Corners Logo\",\n  width: 40,\n  height: 40,\n  className: \"\",\n  priority: true,\n  showName: true,\n  title: \"Corners New York\",\n}\n\ninterface LogoProps {\n  src?: string\n  fallbackSrc?: string\n  alt?: string\n  width?: number\n  height?: number\n  className?: string\n  priority?: boolean\n  onClick?: () => void\n  showName?: boolean\n  title?: string\n}\n\nexport default function Logo({\n  src = DEFAULT_LOGO_CONFIG.src,\n  fallbackSrc = DEFAULT_LOGO_CONFIG.fallbackSrc,\n  alt = DEFAULT_LOGO_CONFIG.alt,\n  width = DEFAULT_LOGO_CONFIG.width,\n  height = DEFAULT_LOGO_CONFIG.height,\n  className = DEFAULT_LOGO_CONFIG.className,\n  priority = DEFAULT_LOGO_CONFIG.priority,\n  showName = DEFAULT_LOGO_CONFIG.showName,\n  title = DEFAULT_LOGO_CONFIG.title,\n  onClick,\n}: LogoProps) {\n  const [logoError, setLogoError] = useState(false)\n  const [isActive, setIsActive] = useState(false)\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (onClick) {\n      onClick()\n    }\n  }\n\n  const handleMouseDown = () => setIsActive(true)\n  const handleMouseUp = () => setIsActive(false)\n  const handleMouseLeave = () => setIsActive(false)\n  const handleTouchStart = () => setIsActive(true)\n  const handleTouchEnd = () => setIsActive(false)\n\n  const logoContent = (\n    <div\n      className={cn(\n        \"flex items-center gap-2 transition-transform duration-200 ease-in-out\",\n        isActive ? \"scale-95\" : \"scale-100\",\n        className\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className={cn(\"relative dark:invert\", isActive ? \"scale-95\" : \"scale-100\")}>\n        {logoError ? (\n          <Image\n            src={fallbackSrc}\n            alt={alt}\n            width={width}\n            height={height}\n            priority={priority}\n          />\n        ) : (\n          <Image\n            src={src}\n            alt={alt}\n            width={width}\n            height={height}\n            priority={priority}\n            onError={() => setLogoError(true)}\n          />\n        )}\n      </div>\n      {showName && (\n        <h1 className=\"hidden md:block text-xl font-semibold transition-transform duration-200 ease-in-out\">\n          {title}\n        </h1>\n      )}\n    </div>\n  )\n\n  return onClick ? logoContent : <Link href=\"/\">{logoContent}</Link>\n}\n",
      "type": "registry:component",
      "target": "delta/layout/logo.tsx"
    },
    {
      "path": "delta/layout/logo-demo.tsx",
      "content": "\"use client\"\n\nimport Logo from \"./logo\";\n\nexport default function LogoDemo() {\n  return (\n    <div className=\"space-y-8 p-8\">\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">Default Logo</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo />\n          <p className=\"text-muted-foreground\">Using all default configuration with default title</p>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">Logo without Name</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo showName={false} />\n          <p className=\"text-muted-foreground\">Logo without title</p>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">Custom Size</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo width={60} height={60} />\n          <p className=\"text-muted-foreground\">Larger size (60x60) with default title</p>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">Custom Logo</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo \n            src=\"/custom-logo.svg\"\n            alt=\"Custom Logo\"\n            width={50}\n            height={50}\n          />\n          <p className=\"text-muted-foreground\">Custom source and alt text with default title</p>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">With Click Handler</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo \n            onClick={() => alert(\"Logo clicked!\")}\n            className=\"cursor-pointer hover:opacity-80 transition-opacity\"\n          />\n          <p className=\"text-muted-foreground\">Clickable logo with hover effect and default title</p>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">Error State</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo \n            src=\"/non-existent-logo.svg\"\n            fallbackSrc=\"/fallback-logo.svg\"\n            alt=\"Logo with Error\"\n          />\n          <p className=\"text-muted-foreground\">Shows fallback when main logo fails to load, with default title</p>\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-medium mb-4\">Custom Title</h2>\n        <div className=\"flex items-center gap-4\">\n          <Logo \n            title=\"Custom Company Name\"\n          />\n          <p className=\"text-muted-foreground\">Logo with custom title</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/layout/logo-demo.tsx"
    }
  ]
}
