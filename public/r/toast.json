{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:component",
  "author": "patrick prunty <https://www.patrickprunty.com>",
  "dependencies": ["sonner"],
  "files": [
    {
      "path": "registry/components/toast.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { toast as sonnerToast } from \"sonner\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Toaster as ShadcnToaster } from \"@/components/ui/sonner\"\n\n// Toast theme configuration based on admonition colors\nconst toastTheme = {\n  success: {\n    background: \"bg-emerald-50 dark:bg-emerald-950/30\",\n    border: \"border-emerald-200 dark:border-emerald-800\",\n    text: \"text-emerald-700 dark:text-emerald-300\",\n  },\n  error: {\n    background: \"bg-red-50 dark:bg-red-950/30\",\n    border: \"border-red-200 dark:border-red-800\",\n    text: \"text-red-700 dark:text-red-300\",\n  },\n  warning: {\n    background: \"bg-amber-50 dark:bg-amber-950/30\",\n    border: \"border-amber-200 dark:border-amber-700\",\n    text: \"text-amber-700 dark:text-amber-300\",\n  },\n  info: {\n    background: \"bg-blue-50 dark:bg-blue-950/30\",\n    border: \"border-blue-200 dark:border-blue-800\",\n    text: \"text-blue-700 dark:text-blue-300\",\n  },\n  default: {\n    background: \"bg-gray-50 dark:bg-gray-950/30\",\n    border: \"border-gray-200 dark:border-gray-800\",\n    text: \"text-gray-700 dark:text-gray-300\",\n  },\n}\n\nexport interface ToastProviderProps\n  extends Omit<React.ComponentProps<typeof ShadcnToaster>, \"theme\"> {\n  /**\n   * Position of the toast\n   * @default \"bottom-right\"\n   */\n  position?:\n    | \"top-left\"\n    | \"top-center\"\n    | \"top-right\"\n    | \"bottom-left\"\n    | \"bottom-center\"\n    | \"bottom-right\"\n\n  /**\n   * Enable rich colors for better visual hierarchy\n   * @default true\n   */\n  richColors?: boolean\n\n  /**\n   * Maximum number of toasts to show at once\n   * @default 3\n   */\n  visibleToasts?: number\n\n  /**\n   * Custom class name for the toaster\n   */\n  className?: string\n\n  /**\n   * Custom styling for different toast types\n   */\n  toastOptions?: {\n    style?: React.CSSProperties\n    className?: string\n    duration?: number\n  }\n}\n\n/**\n * ToastProvider component - singleton toast manager\n * Should be rendered once at the app level\n */\nexport function ToastProvider({\n  position = \"bottom-right\",\n  richColors = true,\n  visibleToasts = 3,\n  className,\n  toastOptions,\n  ...props\n}: ToastProviderProps) {\n  return (\n    <ShadcnToaster\n      position={position}\n      richColors={richColors}\n      visibleToasts={visibleToasts}\n      className={cn(\"toaster\", className)}\n      toastOptions={{\n        className: cn(\n          \"group toast\",\n          \"border rounded-lg p-4 shadow-md\",\n          \"bg-background text-foreground\",\n          toastOptions?.className\n        ),\n        style: toastOptions?.style,\n        duration: toastOptions?.duration,\n      }}\n      {...props}\n    />\n  )\n}\n\n/**\n * Toast function with type-specific methods\n * Enhanced with theme-aware styling\n */\nexport const toast = Object.assign(\n  (message: string, options?: any) => sonnerToast(message, options),\n  {\n    success: (message: string, options?: any) =>\n      sonnerToast.success(message, {\n        className: cn(\n          toastTheme.success.background,\n          toastTheme.success.border,\n          toastTheme.success.text,\n          \"border\"\n        ),\n        ...options,\n      }),\n\n    error: (message: string, options?: any) =>\n      sonnerToast.error(message, {\n        className: cn(\n          toastTheme.error.background,\n          toastTheme.error.border,\n          toastTheme.error.text,\n          \"border\"\n        ),\n        ...options,\n      }),\n\n    warning: (message: string, options?: any) =>\n      sonnerToast.warning(message, {\n        className: cn(\n          toastTheme.warning.background,\n          toastTheme.warning.border,\n          toastTheme.warning.text,\n          \"border\"\n        ),\n        ...options,\n      }),\n\n    info: (message: string, options?: any) =>\n      sonnerToast.info(message, {\n        className: cn(\n          toastTheme.info.background,\n          toastTheme.info.border,\n          toastTheme.info.text,\n          \"border\"\n        ),\n        ...options,\n      }),\n\n    default: (message: string, options?: any) =>\n      sonnerToast(message, {\n        className: cn(\n          toastTheme.default.background,\n          toastTheme.default.border,\n          toastTheme.default.text,\n          \"border\"\n        ),\n        ...options,\n      }),\n\n    // Copy over other methods from sonnerToast\n    dismiss: sonnerToast.dismiss,\n    message: sonnerToast.message,\n    promise: sonnerToast.promise,\n    custom: sonnerToast.custom,\n    loading: sonnerToast.loading,\n  }\n)\n\n// Re-export the Toaster for convenience\nexport const Toaster = ShadcnToaster\n\n// Re-export types for convenience\nexport type ToasterProps = React.ComponentProps<typeof ShadcnToaster>\n\n// Default export for backwards compatibility\nexport default ToastProvider\n",
      "type": "registry:component",
      "target": "/delta/toast.tsx"
    }
  ]
}
