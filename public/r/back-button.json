{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "back-button",
  "type": "registry:component",
  "title": "Back Button",
  "description": "A component for back-button",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/ui/back-button.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { ArrowLeft } from \"@phosphor-icons/react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst backButtonVariants = cva(\n  \"inline-flex py-2 px-3 items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary-hover border-primary\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary-hover border-secondary\",\n        outline: \"border border-border bg-background hover:bg-accent hover:text-accent-foreground\",\n        ghost: \"border-transparent hover:bg-accent hover:text-accent-foreground\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90 border-destructive\",\n      },\n      size: {\n        sm: \"h-8 rounded-md\",\n        md: \"h-10 rounded-md\",\n        lg: \"h-12 rounded-md\",\n        icon: \"h-9 w-9 rounded-md\",\n      },\n      hasText: {\n        true: \"px-3 gap-2\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"outline\",\n      size: \"icon\",\n      hasText: false,\n    },\n    compoundVariants: [\n      {\n        hasText: true,\n        size: \"sm\",\n        class: \"px-3\",\n      },\n      {\n        hasText: true,\n        size: \"md\",\n        class: \"px-4\",\n      },\n      {\n        hasText: true,\n        size: \"lg\",\n        class: \"px-5\",\n      },\n    ],\n  },\n)\n\nexport interface BackButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    Omit<VariantProps<typeof backButtonVariants>, \"hasText\"> {\n  fallbackRoute?: string\n  iconProps?: React.ComponentProps<typeof ArrowLeft>\n  pulse?: boolean\n  text?: string\n}\n\nconst BackButton = React.forwardRef<HTMLButtonElement, BackButtonProps>(\n  ({ className, variant, size, fallbackRoute = \"/\", iconProps, pulse = false, text, ...props }, ref) => {\n    const router = useRouter()\n    const [isPulsing, setIsPulsing] = React.useState(false)\n    // Calculate hasText internally, don't expose it as a prop\n    const hasText = Boolean(text)\n\n    const handleBack = (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (pulse) {\n        setIsPulsing(true)\n        setTimeout(() => setIsPulsing(false), 200) // Match animation duration\n      }\n\n      if (typeof window !== \"undefined\" && window.history.length > 2) {\n        router.back()\n      } else {\n        router.push(fallbackRoute)\n      }\n\n      props.onClick?.(e)\n    }\n\n    return (\n      <button\n        className={cn(backButtonVariants({ variant, size, hasText, className }))}\n        ref={ref}\n        onClick={handleBack}\n        aria-label={text || \"Back\"}\n        {...props}\n      >\n        <span className={cn(\"icon-container\", isPulsing && \"icon-pulse\")}>\n          <ArrowLeft size=\"1.2em\" weight=\"regular\" {...iconProps} />\n        </span>\n        {text && <span>{text}</span>}\n      </button>\n    )\n  },\n)\n\nBackButton.displayName = \"BackButton\"\n\nexport { BackButton, backButtonVariants }\n",
      "type": "registry:component",
      "target": "registry/ui/back-button.tsx"
    },
    {
      "path": "registry/examples/back-button-basic-demo.tsx",
      "content": "\"use client\"\n\nimport { BackButton } from \"@/registry/ui/back-button\"\n\nexport default function BackButtonBasicDemo() {\n  return (\n    <div className=\"flex items-center justify-center p-4\">\n      <BackButton variant=\"ghost\" size=\"md\" />\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "registry/examples/back-button-basic-demo.tsx"
    },
    {
      "path": "content/docs/back-button.mdx",
      "content": "export const metadata = {\n  title: 'BackButton | Delta Components',\n  description: 'A smart back button component that handles navigation history with a fallback to root. Built with shadcn/ui and featuring intelligent routing.',\n\n  keywords: ['shadcn/ui', 'react', 'back button', 'navigation', 'ui components', 'react components', 'delta components', 'nextjs components', 'tailwind components'],\n\n  alternates: {\n    canonical: 'https://deltacomponents.dev/docs/back-button',\n  },\n\n  category: 'component',\n\n  openGraph: {\n    title: 'BackButton Component | Delta Components',\n    description: 'A smart back button component that handles navigation history with a fallback to root. Built with shadcn/ui and featuring intelligent routing.',\n    type: 'article',\n    url: 'https://deltacomponents.dev/docs/back-button',\n    images: [\n      {\n        url: 'https://deltacomponents.dev/og/back-button.png',\n        width: 1200,\n        height: 630,\n        alt: 'BackButton Component Preview showing smart navigation handling'\n      }\n    ],\n    article: {\n      authors: ['Patrick Prunty'],\n      tags: ['UI Components', 'React', 'Shadcn', 'Navigation', 'Back Button'],\n      section: 'Components'\n    },\n    siteName: 'Delta Components'\n  },\n\n  twitter: {\n    card: 'summary_large_image',\n    title: 'BackButton Component | Delta Components',\n    description: 'A smart back button component that handles navigation history with a fallback to root. Built with shadcn/ui and featuring intelligent routing.',\n    images: ['https://deltacomponents.dev/og/back-button.png'],\n    creator: '@pprunty_',\n    site: '@deltacomponents'\n  },\n\n  robots: {\n    index: true,\n    follow: true,\n    nocache: false,\n    googleBot: {\n      index: true,\n      follow: true,\n      'max-image-preview': 'large',\n      'max-snippet': -1,\n      'max-video-preview': -1\n    }\n  }\n}\n\n# BackButton\n\nA smart back button component that intelligently handles navigation history with a fallback to root.\n\n## Features\n\n- **Smart Navigation**: Automatically detects browser history and navigates back when possible\n- **Fallback Handling**: Falls back to a specified route (defaults to '/') when no history is available\n- **Customizable**: Supports text, variants, and icon customization\n- **Accessible**: Built with proper ARIA attributes and keyboard navigation\n\n## Basic Usage\n\n<ComponentTabs name=\"back-button-basic\" />\n\n## Installation\n\n### CLI\n\n```shell\nnpx shadcn@latest add \"https://deltacomponents.dev/r/back-button.json\"\n```\n\n## Props\n\n<div className=\"my-6 w-full overflow-y-auto\">\n  <table className=\"w-full\">\n    <thead>\n      <tr className=\"m-0 border-t p-0 even:bg-muted\">\n        <th className=\"border px-4 py-2 text-left font-bold\">Prop</th>\n        <th className=\"border px-4 py-2 text-left font-bold\">Type</th>\n        <th className=\"border px-4 py-2 text-left font-bold\">Default</th>\n        <th className=\"border px-4 py-2 text-left font-bold\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr className=\"m-0 border-t p-0 even:bg-muted\">\n        <td className=\"border px-4 py-2 text-left\">`text`</td>\n        <td className=\"border px-4 py-2 text-left\">`string`</td>\n        <td className=\"border px-4 py-2 text-left\">-</td>\n        <td className=\"border px-4 py-2 text-left\">Optional text to display next to the icon</td>\n      </tr>\n      <tr className=\"m-0 border-t p-0 even:bg-muted\">\n        <td className=\"border px-4 py-2 text-left\">`fallbackRoute`</td>\n        <td className=\"border px-4 py-2 text-left\">`string`</td>\n        <td className=\"border px-4 py-2 text-left\">`'/'`</td>\n        <td className=\"border px-4 py-2 text-left\">Route to navigate to when history is empty</td>\n      </tr>\n      <tr className=\"m-0 border-t p-0 even:bg-muted\">\n        <td className=\"border px-4 py-2 text-left\">`variant`</td>\n        <td className=\"border px-4 py-2 text-left\">`'default' \\| 'secondary' \\| 'outline' \\| 'ghost' \\| 'destructive'`</td>\n        <td className=\"border px-4 py-2 text-left\">`'outline'`</td>\n        <td className=\"border px-4 py-2 text-left\">The visual style variant of the button</td>\n      </tr>\n      <tr className=\"m-0 border-t p-0 even:bg-muted\">\n        <td className=\"border px-4 py-2 text-left\">`size`</td>\n        <td className=\"border px-4 py-2 text-left\">`'sm' \\| 'md' \\| 'lg' \\| 'icon'`</td>\n        <td className=\"border px-4 py-2 text-left\">`'icon'`</td>\n        <td className=\"border px-4 py-2 text-left\">The size of the button</td>\n      </tr>\n      <tr className=\"m-0 border-t p-0 even:bg-muted\">\n        <td className=\"border px-4 py-2 text-left\">`className`</td>\n        <td className=\"border px-4 py-2 text-left\">`string`</td>\n        <td className=\"border px-4 py-2 text-left\">-</td>\n        <td className=\"border px-4 py-2 text-left\">Additional CSS classes</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n## Smart Navigation Handling\n\nThe BackButton component intelligently handles navigation:\n\n1. When clicked, it first checks if there's browser history available (`window.history.length > 2`).\n2. If history exists, it uses `router.back()` to navigate to the previous page.\n3. If no history is available (e.g., user landed directly on the page), it navigates to the `fallbackRoute`.\n4. The default fallback route is the root path (`'/'`), but this can be customized via the `fallbackRoute` prop.\n\n```tsx\nimport { BackButton } from \"@/registry/ui/back-button\"\n\nexport default function BackButtonExample() {\n  return (\n    // Will go back in history if available, otherwise to /dashboard\n    <BackButton \n      text=\"Back to Dashboard\"\n      fallbackRoute=\"/dashboard\"\n      variant=\"ghost\"\n      size=\"md\"\n    />\n  )\n}\n```\n\n## Accessibility\n\nThe BackButton component follows WAI-ARIA guidelines:\n- Includes appropriate aria-label (uses text prop if provided)\n- Maintains keyboard focus management\n- Provides visual feedback for all interactive states\n- Uses semantic HTML elements for better screen reader support\n",
      "type": "registry:component",
      "target": "content/docs/back-button.mdx"
    }
  ]
}