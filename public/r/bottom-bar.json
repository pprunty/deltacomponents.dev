{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bottom-bar",
  "type": "registry:component",
  "title": "Bottom Bar",
  "description": "A component for bottom-bar",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "delta/layout/bottom-bar.tsx",
      "content": "'use client';\n\nimport type React from 'react';\nimport { memo, useState, useCallback } from 'react';\nimport { usePathname } from 'next/navigation';\nimport Link from 'next/link';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport type { IconProps } from '@phosphor-icons/react';\nimport { Plus } from '@phosphor-icons/react';\n\n// Define the route type\nexport interface RouteItem {\n  href: string;\n  label: string;\n  icon?: React.ForwardRefExoticComponent<IconProps>;\n}\n\ninterface BarItemProps {\n  href: string;\n  label: string;\n  Icon?: React.ForwardRefExoticComponent<IconProps>;\n  isActive: boolean;\n  showLabels: boolean;\n  onItemClick: () => void;\n  animationKey: number;\n}\n\nconst BarItem = memo(\n  ({\n    href,\n    label,\n    Icon,\n    isActive,\n    showLabels,\n    onItemClick,\n    animationKey,\n  }: BarItemProps) => {\n    return (\n      <li className=\"flex-1\">\n        <Link\n          href={href}\n          className={clsx(\n            'flex flex-col items-center justify-center w-full h-full px-1',\n            showLabels ? 'py-2' : 'py-4',\n          )}\n          onClick={(e) => {\n            if (isActive) {\n              e.preventDefault();\n              window.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n            onItemClick();\n          }}\n        >\n          <div\n            key={animationKey}\n            className={clsx(\n              'flex flex-col items-center',\n              isActive && 'icon-pulse',\n            )}\n          >\n            {Icon && (\n              <div className=\"icon-container\">\n                <Icon\n                  weight={isActive ? 'fill' : 'regular'}\n                  className={clsx(\n                    'w-7 h-7',\n                    isActive ? 'text-primary' : 'text-muted-foreground',\n                  )}\n                />\n              </div>\n            )}\n            {showLabels && (\n              <span\n                className={clsx(\n                  'text-[10px] leading-tight text-center mt-1.5',\n                  isActive ? 'text-primary' : 'text-muted-foreground',\n                )}\n              >\n                {label}\n              </span>\n            )}\n          </div>\n        </Link>\n      </li>\n    );\n  },\n);\n\nBarItem.displayName = 'BarItem';\n\n// Center Button Config\nexport interface CenterButtonConfig {\n  onClick: () => void;\n  label?: string;\n  icon?: React.ForwardRefExoticComponent<IconProps>;\n}\n\n// Center Button Props\ninterface CenterButtonProps {\n  onClick: () => void;\n  label?: string;\n  showLabels: boolean;\n  animationKey: number;\n  Icon?: React.ForwardRefExoticComponent<IconProps>;\n}\n\n// Center Button component\nconst CenterButton = memo(\n  ({ onClick, label, showLabels, animationKey, Icon }: CenterButtonProps) => {\n    // Use the provided Icon or default to Plus\n    const ButtonIcon = Icon || Plus;\n\n    return (\n      <li className=\"flex-none -mt-5 z-10\">\n        <button\n          onClick={onClick}\n          className=\"flex flex-col items-center justify-center\"\n          aria-label={label || 'Action'}\n        >\n          <div\n            key={animationKey}\n            className={clsx('flex flex-col items-center', 'icon-pulse')}\n          >\n            <div className=\"icon-container p-3.5 rounded-full bg-primary shadow-lg hover:bg-primary-hover transition-colors\">\n              <ButtonIcon\n                weight=\"bold\"\n                className=\"w-6 h-6 text-primary-foreground\"\n              />\n            </div>\n            {showLabels && label && (\n              <span className=\"text-[10px] leading-tight text-center mt-1.5 text-primary\">\n                {label}\n              </span>\n            )}\n          </div>\n        </button>\n      </li>\n    );\n  },\n);\n\nCenterButton.displayName = 'CenterButton';\n\ninterface BottomBarProps {\n  routes: RouteItem[];\n  showLabels?: boolean;\n  centerButton?: CenterButtonConfig;\n  className?: string;\n}\n\nconst BottomBar: FC<BottomBarProps> = memo(function BottomBar({\n  routes,\n  showLabels = false,\n  centerButton,\n  className,\n}) {\n  const pathname = usePathname();\n  const [animationKeys, setAnimationKeys] = useState<Record<string, number>>(\n    {},\n  );\n\n  const handleItemClick = useCallback((href: string) => {\n    setAnimationKeys((prev) => ({\n      ...prev,\n      [href]: (prev[href] || 0) + 1,\n    }));\n  }, []);\n\n  const handleCenterButtonClick = useCallback(() => {\n    setAnimationKeys((prev) => ({\n      ...prev,\n      centerButton: (prev.centerButton || 0) + 1,\n    }));\n    centerButton?.onClick();\n  }, [centerButton]);\n\n  // Split routes into two halves for layout with center button\n  const halfLength = Math.ceil(routes.length / 2);\n  const firstHalf = routes.slice(0, halfLength);\n  const secondHalf = routes.slice(halfLength);\n\n  return (\n    <>\n      {/* CSS for icon-pulse animation */}\n      <style jsx global>{`\n        .icon-pulse {\n          animation: icon-pulse 0.3s ease-in-out;\n        }\n\n        @keyframes icon-pulse {\n          0% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.2);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n      `}</style>\n\n      <nav\n        className={clsx(\n          'block md:hidden fixed py-1 bottom-0 left-0 border-t border-border right-0 z-50 bg-background backdrop-blur-lg bg-opacity-95',\n          className,\n        )}\n      >\n        <ul className=\"flex justify-around items-center relative\">\n          {centerButton ? (\n            <>\n              {/* First half of navigation items */}\n              {firstHalf.map(({ href, label, icon: Icon }) => (\n                <BarItem\n                  key={href}\n                  href={href}\n                  label={label}\n                  Icon={Icon}\n                  isActive={pathname === href}\n                  showLabels={showLabels}\n                  onItemClick={() => handleItemClick(href)}\n                  animationKey={animationKeys[href] || 0}\n                />\n              ))}\n\n              {/* Center button */}\n              <CenterButton\n                onClick={handleCenterButtonClick}\n                label={centerButton.label}\n                Icon={centerButton.icon}\n                showLabels={showLabels}\n                animationKey={animationKeys.centerButton || 0}\n              />\n\n              {/* Second half of navigation items */}\n              {secondHalf.map(({ href, label, icon: Icon }) => (\n                <BarItem\n                  key={href}\n                  href={href}\n                  label={label}\n                  Icon={Icon}\n                  isActive={pathname === href}\n                  showLabels={showLabels}\n                  onItemClick={() => handleItemClick(href)}\n                  animationKey={animationKeys[href] || 0}\n                />\n              ))}\n            </>\n          ) : (\n            // Original layout without center button\n            routes.map(({ href, label, icon: Icon }) => (\n              <BarItem\n                key={href}\n                href={href}\n                label={label}\n                Icon={Icon}\n                isActive={pathname === href}\n                showLabels={showLabels}\n                onItemClick={() => handleItemClick(href)}\n                animationKey={animationKeys[href] || 0}\n              />\n            ))\n          )}\n        </ul>\n      </nav>\n    </>\n  );\n});\n\nBottomBar.displayName = 'BottomBar';\n\nexport default BottomBar;\n",
      "type": "registry:component",
      "target": "delta/layout/bottom-bar.tsx"
    },
    {
      "path": "delta/layout/bottom-bar-demo.tsx",
      "content": "'use client';\n\nimport { useState } from 'react';\nimport BottomBar, { type RouteItem } from './bottom-bar';\nimport { House, Plus, BookOpen } from '@phosphor-icons/react';\n\nexport default function BottomBarDemo() {\n  const [showLabels, setShowLabels] = useState(true);\n  const [showCenterButton, setShowCenterButton] = useState(true);\n\n  // Example routes for the demo\n  const demoRoutes: RouteItem[] = [\n    {\n      href: '/',\n      label: 'Home',\n      icon: House,\n    },\n    {\n      href: '/docs/bottom-bar',\n      label: 'Docs',\n      icon: BookOpen,\n    },\n  ];\n\n  // Example center button configuration\n  const centerButton = {\n    onClick: () => alert('Center button clicked!'),\n    label: 'Add',\n    icon: Plus,\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Demo controls */}\n      <div className=\"p-4 max-w-md mx-auto\">\n        <h1 className=\"text-2xl text-primary font-bold mb-4\">\n          Bottom Bar Demo\n        </h1>\n\n        <div className=\"space-y-4 mb-8\">\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                id=\"showLabels\"\n                checked={showLabels}\n                onChange={(e) => setShowLabels(e.target.checked)}\n                className=\"h-4 w-4\"\n              />\n              <label htmlFor=\"showLabels\">Show Labels</label>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                id=\"showCenterButton\"\n                checked={showCenterButton}\n                onChange={(e) => setShowCenterButton(e.target.checked)}\n                className=\"h-4 w-4\"\n              />\n              <label htmlFor=\"showCenterButton\">Show Center Button</label>\n            </div>\n          </div>\n\n          <div className=\"bg-gray-100 p-4 rounded-lg space-y-3 text-foreground\">\n            <h3 className=\"font-medium\">Component Features:</h3>\n            <ul className=\"list-disc pl-5 space-y-2 text-sm\">\n              <li>\n                <strong>Mobile-only:</strong> The bottom bar is only visible on\n                small screens/mobile devices (hidden on md breakpoint and\n                above).\n              </li>\n              <li>\n                <strong>Animation:</strong> Icons have a pulse animation effect\n                when clicked.\n              </li>\n              <li>\n                <strong>Scroll to top:</strong> When clicking an already active\n                navigation item, the page will scroll smoothly to the top.\n              </li>\n              <li>\n                <strong>Adaptive layout:</strong> With center button enabled,\n                navigation items are split into two groups. Without it, items\n                spread evenly.\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Current page simulation */}\n        <div className=\"border border-border rounded-lg p-6 mb-20\">\n          <h2 className=\"text-xl font-semibold mb-2\">Current Page Content</h2>\n          <p>This is where your page content would appear.</p>\n          <p className=\"mt-4 text-muted-foreground\">\n            The bottom navigation bar will appear at the bottom of the viewport\n            on mobile devices.\n          </p>\n          <div className=\"mt-6 p-3 bg-yellow-50 border border-yellow-200 rounded-md\">\n            <p className=\"text-sm text-yellow-800\">\n              <strong>Note:</strong> Resize your browser to a mobile width (less\n              than 768px) to see the bottom bar. On larger screens, it's hidden\n              by design.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Bar */}\n      <BottomBar\n        routes={demoRoutes}\n        showLabels={showLabels}\n        centerButton={showCenterButton ? centerButton : undefined}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/layout/bottom-bar-demo.tsx"
    }
  ]
}
