{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-progress-article-demo",
  "type": "registry:block",
  "author": "patrick prunty <https://www.patrickprunty.com>",
  "registryDependencies": [
    "https://deltacomponents.dev/r/scroll-progress.json"
  ],
  "files": [
    {
      "path": "registry/examples/scroll-progress-article-demo.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport ScrollProgress from \"@/delta/scroll-progress\"\n\nexport default function ScrollProgressArticleDemo() {\n  return (\n    <div className=\"w-full max-w-4xl mx-auto\">\n      <ScrollProgress height={6} color=\"#3b82f6\" position=\"top\">\n        <article className=\"prose prose-gray dark:prose-invert max-w-none px-6 py-8\">\n          <header className=\"mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">\n              The Future of Web Development: A Deep Dive\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Exploring emerging trends and technologies that will shape the\n              next decade of web development\n            </p>\n          </header>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4\">Introduction</h2>\n            <p className=\"mb-4\">\n              The web development landscape is constantly evolving, with new\n              technologies, frameworks, and methodologies emerging at a rapid\n              pace. As we look toward the future, several key trends are\n              beginning to reshape how we build and interact with web\n              applications.\n            </p>\n            <p className=\"mb-4\">\n              From the rise of AI-powered development tools to the increasing\n              importance of performance optimization, developers today face both\n              exciting opportunities and complex challenges. This comprehensive\n              guide explores the most significant trends that will define the\n              next era of web development.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              The Rise of AI in Development\n            </h2>\n            <p className=\"mb-4\">\n              Artificial Intelligence is revolutionizing the way we write,\n              debug, and maintain code. Tools like GitHub Copilot, ChatGPT, and\n              specialized AI assistants are becoming integral parts of the\n              development workflow, offering unprecedented levels of\n              productivity and code quality.\n            </p>\n            <p className=\"mb-4\">\n              These AI tools don't just autocomplete code; they understand\n              context, suggest optimizations, and can even help with complex\n              architectural decisions. As these technologies mature, we're\n              seeing a shift from manual coding to AI-assisted development,\n              where developers focus more on high-level problem-solving while AI\n              handles routine implementation tasks.\n            </p>\n            <p className=\"mb-4\">\n              The implications are profound: faster development cycles, reduced\n              bug rates, and the democratization of complex programming\n              concepts. However, this also raises important questions about code\n              ownership, debugging AI-generated code, and maintaining human\n              expertise in an increasingly automated field.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Performance-First Development\n            </h2>\n            <p className=\"mb-4\">\n              Web performance has evolved from a nice-to-have feature to a\n              critical business requirement. With Core Web Vitals becoming a\n              Google ranking factor and users expecting instant load times,\n              performance optimization is now at the forefront of web\n              development strategy.\n            </p>\n            <p className=\"mb-4\">\n              Modern frameworks like Next.js, Nuxt.js, and SvelteKit are leading\n              the charge with built-in performance optimizations, including\n              automatic code splitting, image optimization, and server-side\n              rendering. These tools make it easier than ever to build fast,\n              responsive applications without sacrificing developer experience.\n            </p>\n            <p className=\"mb-4\">\n              The trend toward performance-first development is also driving\n              innovation in areas like edge computing, progressive web apps, and\n              advanced caching strategies. Developers are learning to think\n              about performance from the ground up, rather than treating it as\n              an afterthought.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              The Component-Driven Revolution\n            </h2>\n            <p className=\"mb-4\">\n              Component-based architecture has become the dominant paradigm in\n              modern web development. This approach promotes reusability,\n              maintainability, and team collaboration by breaking down complex\n              UIs into smaller, manageable pieces.\n            </p>\n            <p className=\"mb-4\">\n              Design systems and component libraries are now essential tools for\n              scaling development teams. Popular solutions like Storybook,\n              Figma, and specialized component libraries enable teams to build\n              consistent, accessible interfaces while maintaining design\n              coherence across large applications.\n            </p>\n            <p className=\"mb-4\">\n              The future of component-driven development looks even more\n              promising, with emerging technologies like Web Components gaining\n              traction and new tools making it easier to share components across\n              different frameworks and applications.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              Security in the Modern Web\n            </h2>\n            <p className=\"mb-4\">\n              As web applications become more complex and handle increasingly\n              sensitive data, security considerations have become paramount.\n              Modern development practices now emphasize security by design,\n              with developers learning to identify and mitigate vulnerabilities\n              from the earliest stages of development.\n            </p>\n            <p className=\"mb-4\">\n              New security challenges emerge regularly, from supply chain\n              attacks targeting npm packages to sophisticated client-side\n              vulnerabilities. The development community has responded with\n              better tooling, including automated security scanning, dependency\n              monitoring, and comprehensive security guidelines.\n            </p>\n            <p className=\"mb-4\">\n              Looking ahead, we can expect even greater integration of security\n              tools into the development workflow, with AI-powered vulnerability\n              detection and automated security testing becoming standard\n              practice.\n            </p>\n          </section>\n\n          <section className=\"mb-8\">\n            <h2 className=\"text-2xl font-semibold mb-4\">\n              The Future of Frontend Frameworks\n            </h2>\n            <p className=\"mb-4\">\n              The frontend framework landscape continues to evolve rapidly, with\n              established players like React, Vue, and Angular constantly\n              innovating while new frameworks like Svelte and Solid.js challenge\n              conventional wisdom about how frontend applications should be\n              built.\n            </p>\n            <p className=\"mb-4\">\n              We're seeing a trend toward frameworks that prioritize developer\n              experience while maintaining excellent performance\n              characteristics. Features like hot module replacement, time-travel\n              debugging, and intuitive state management are becoming standard\n              expectations rather than luxury features.\n            </p>\n            <p className=\"mb-4\">\n              The future likely holds even more innovation in this space, with\n              frameworks becoming more specialized for specific use cases and\n              development patterns. We may see the rise of AI-optimized\n              frameworks that can automatically optimize code for performance\n              and accessibility.\n            </p>\n          </section>\n\n          <footer className=\"mt-12 pt-8 border-t border-gray-200 dark:border-gray-800\">\n            <p className=\"text-sm text-muted-foreground\">\n              This article demonstrates the scroll progress component with\n              content-based measurement. The progress bar above tracks your\n              reading progress through this article content.\n            </p>\n          </footer>\n        </article>\n      </ScrollProgress>\n    </div>\n  )\n}\n",
      "type": "registry:block",
      "target": "components/delta/scroll-progress-article-demo.tsx"
    }
  ]
}