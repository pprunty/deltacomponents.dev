{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "title": "Button",
  "description": "A component for button",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "delta/components/button.tsx",
      "content": "'use client';\n\nimport type { ReactNode } from 'react';\nimport { clsx } from 'clsx';\nimport { ClipLoader } from 'react-spinners';\n\nexport type ButtonVariant =\n  | 'primary'\n  | 'secondary'\n  | 'destructive'\n  | 'action'\n  | 'neobrutalism'\n  | 'ghost';\n\nexport interface ButtonProps {\n  onClick?: () => void;\n  title: string;\n  type?: 'button' | 'submit' | 'reset';\n  className?: string;\n  disabled?: boolean;\n  icon?: ReactNode;\n  variant?: ButtonVariant;\n  extendedClickArea?: boolean;\n  isLoading?: boolean; // New prop for loading state\n  spinnerSize?: number; // Optional prop for spinner size\n  spinnerColor?: string; // Optional prop for spinner color\n  actionColor?: string; // New prop for customizing action variant color\n  neobrutalismColor?: string; // New prop for neobrutalism variant color\n}\n\nexport function Button({\n  onClick,\n  title,\n  type = 'button',\n  className,\n  disabled = false,\n  icon,\n  variant = 'primary',\n  extendedClickArea = false,\n  isLoading = false, // Default to not loading\n  spinnerSize = 20, // Default size\n  spinnerColor, // Will use appropriate color based on variant if not specified\n  actionColor, // New prop\n  neobrutalismColor = 'bg-blue-300', // Default neobrutalism color\n}: ButtonProps) {\n  // Determine spinner color based on variant and theme colors\n  const getSpinnerColor = () => {\n    if (spinnerColor) return spinnerColor;\n\n    switch (variant) {\n      case 'primary':\n        return 'var(--primary-foreground)'; // White in light mode, dark in dark mode\n      case 'secondary':\n        return 'var(--secondary-foreground)'; // Dark in light mode, white in dark mode\n      case 'action':\n        return 'var(--action-foreground)'; // Always white/light\n      case 'destructive':\n        return 'var(--destructive-foreground)'; // Always white/light\n      default:\n        return 'currentColor'; // Fallback to the current text color\n    }\n  };\n\n  // Get action variant styles based on whether a custom color is provided\n  const getActionStyles = () => {\n    if (actionColor) {\n      // If it's a Tailwind class (starts with bg-)\n      if (actionColor.startsWith('bg-')) {\n        const baseColor = actionColor.replace('bg-', '');\n        return [\n          `${actionColor} text-white`,\n          `hover:${actionColor}/80 active:${actionColor}/80`,\n          `focus-visible:outline-${baseColor}/50`,\n          `disabled:hover:${actionColor}`,\n        ];\n      }\n      // If it's a hex color\n      return [\n        `bg-[${actionColor}] text-white`,\n        `hover:bg-[${actionColor}]/80 active:bg-[${actionColor}]/80`,\n        `focus-visible:outline-[${actionColor}]/50`,\n        `disabled:hover:bg-[${actionColor}]`,\n      ];\n    }\n\n    return [\n      'bg-blue-600 text-white',\n      'hover:bg-blue-600/80 active:bg-blue-600/80',\n      'focus-visible:outline-blue-500/50',\n      'disabled:hover:bg-blue-600',\n    ];\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      type={type}\n      disabled={disabled || isLoading} // Disable when loading\n      className={clsx(\n        'w-full text-center rounded-md px-4 py-2 font-medium text-sm transition-all duration-200',\n        'focus:outline-none focus:ring-0 focus-visible:ring-0',\n        'focus:shadow-none focus-visible:shadow-none',\n        'focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2',\n        'active:opacity-80',\n        'disabled:opacity-50 disabled:cursor-not-allowed disabled:active:opacity-50',\n\n        // Add relative positioning when extended click area is enabled\n        extendedClickArea && 'relative',\n\n        // Primary variant styling\n        variant === 'primary' && [\n          'bg-primary text-primary-foreground',\n          'hover:bg-primary/80 active:bg-primary/80',\n          'focus-visible:outline-primary/50',\n          'disabled:hover:bg-primary',\n        ],\n\n        // Secondary variant styling\n        variant === 'secondary' && [\n          'bg-background text-secondary-foreground',\n          'border border-border',\n          'hover:bg-secondary/80 active:bg-secondary/80',\n          'hover:border-border-hover',\n          'focus-visible:outline-secondary/50',\n          'disabled:hover:bg-secondary disabled:hover:border-border',\n        ],\n\n        // Destructive variant styling\n        variant === 'destructive' && [\n          'bg-destructive text-destructive-foreground',\n          'hover:bg-destructive/80 active:bg-destructive/80',\n          'focus-visible:outline-destructive/50',\n          'disabled:hover:bg-destructive',\n        ],\n\n        // Action variant styling with customizable color\n        variant === 'action' && getActionStyles(),\n\n        // Neobrutalism variant styling - FIXED to maintain border visibility\n        variant === 'neobrutalism' && [\n          'rounded-lg border-2 border-black',\n          neobrutalismColor,\n          'text-black',\n          'shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] dark:shadow-[4px_4px_0px_0px_rgba(255,255,255,0.8)]',\n          // Modified hover state to ensure border remains visible\n          'hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)] dark:hover:shadow-[2px_2px_0px_0px_rgba(255,255,255,0.8)]',\n          // Modified active state to use a background change instead of translate to maintain border visibility\n          'active:bg-opacity-80 active:shadow-[1px_1px_0px_0px_rgba(0,0,0,0.8)] dark:active:shadow-[1px_1px_0px_0px_rgba(255,255,255,0.8)]',\n          // Keep disabled state the same\n          'disabled:hover:translate-y-0 disabled:hover:translate-x-0 disabled:hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] dark:disabled:hover:shadow-[4px_4px_0px_0px_rgba(255,255,255,0.8)]',\n        ],\n\n        // Ghost variant styling\n        variant === 'ghost' && [\n          'bg-transparent hover:bg-muted/50',\n          'text-foreground',\n          'hover:text-foreground/80',\n          'focus-visible:outline-muted',\n          'disabled:hover:bg-transparent',\n        ],\n\n        // Add the extended click area pseudo-element styles\n        extendedClickArea &&\n          'before:absolute before:-inset-10 before:block before:content-[\"\"]',\n\n        className,\n      )}\n      // Add these critical styles inline to ensure they override browser defaults\n      style={{\n        WebkitTapHighlightColor: 'transparent',\n        outline: 'none',\n        ...(variant === 'action' &&\n          actionColor &&\n          !actionColor.startsWith('bg-') && {\n            backgroundColor: actionColor,\n            '--tw-bg-opacity': 1,\n          }),\n      }}\n    >\n      <div className=\"flex items-center justify-center gap-2\">\n        {isLoading ? (\n          <ClipLoader\n            size={spinnerSize}\n            color={getSpinnerColor()}\n            cssOverride={{ display: 'block' }}\n          />\n        ) : (\n          <>\n            {icon && <span className=\"flex items-center\">{icon}</span>}\n            <span>{title}</span>\n          </>\n        )}\n      </div>\n    </button>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/components/button.tsx"
    },
    {
      "path": "delta/components/button-demo.tsx",
      "content": "'use client';\n\nimport type React from 'react';\n\nimport { useState } from 'react';\nimport { Button } from './button';\n// Lucide React icons\nimport { ArrowRight, Save, Trash, Download, Mail } from 'lucide-react';\n// Phosphor icons\nimport {\n  ArrowRight as PhArrowRight,\n  FloppyDisk,\n  TrashSimple,\n  DownloadSimple,\n} from '@phosphor-icons/react';\n\n// OAuth Icons\nexport const GoogleIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"19.2\"\n    viewBox=\"0 0 24 24\"\n    width=\"19.2\"\n    {...props}\n  >\n    <path\n      d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n      fill=\"#4285F4\"\n    />\n    <path\n      d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n      fill=\"#34A853\"\n    />\n    <path\n      d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n      fill=\"#FBBC05\"\n    />\n    <path\n      d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n      fill=\"#EA4335\"\n    />\n    <path d=\"M1 1h22v22H1z\" fill=\"none\" />\n  </svg>\n);\n\nexport const GitHubIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"19.2\"\n    height=\"19.2\"\n    fill=\"currentColor\"\n    {...props}\n  >\n    <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n  </svg>\n);\n\nexport default function ButtonDemo() {\n  return (\n    <div className=\"space-y-12\">\n      <ButtonVariantsDemo />\n      <ButtonCustomActionColorsDemo />\n      <ButtonNeobrutalismDemo />\n      <ButtonWithLucideIconsDemo />\n      <ButtonWithPhosphorIconsDemo />\n      <ButtonLoadingStatesDemo />\n      <ButtonSizesDemo />\n      <ButtonExtendedClickAreaDemo />\n      <OAuthButtonsDemo />\n    </div>\n  );\n}\n\nexport function ButtonVariantsDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">Button Variants</h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">Primary</h3>\n          <Button title=\"Primary Button\" variant=\"primary\" />\n          <Button title=\"Disabled\" variant=\"primary\" disabled />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Secondary\n          </h3>\n          <Button title=\"Secondary Button\" variant=\"secondary\" />\n          <Button title=\"Disabled\" variant=\"secondary\" disabled />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Destructive\n          </h3>\n          <Button title=\"Destructive Button\" variant=\"destructive\" />\n          <Button title=\"Disabled\" variant=\"destructive\" disabled />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">Action</h3>\n          <Button title=\"Action Button\" variant=\"action\" />\n          <Button title=\"Disabled\" variant=\"action\" disabled />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonCustomActionColorsDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">Custom Action Colors</h2>\n      <p className=\"text-sm text-muted-foreground mb-4\">\n        While shadcn/ui provides a comprehensive color palette, it doesn't\n        include a primary accent color out of the box. The action variant allows\n        you to customize the color to match your brand or design system.\n      </p>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Default Blue\n          </h3>\n          <Button title=\"Default Action\" variant=\"action\" />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">Indigo</h3>\n          <Button\n            title=\"Indigo Action\"\n            variant=\"action\"\n            actionColor=\"bg-indigo-500\"\n          />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">Purple</h3>\n          <Button\n            title=\"Purple Action\"\n            variant=\"action\"\n            actionColor=\"bg-purple-500\"\n          />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Custom Hex\n          </h3>\n          <Button\n            title=\"Custom Action\"\n            variant=\"action\"\n            actionColor=\"#4F46E5\"\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonNeobrutalismDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">Neobrutalism Variant</h2>\n      <p className=\"text-sm text-muted-foreground mb-4\">\n        Inspired by the neobrutalism design movement, this variant features bold\n        shadows, thick borders, and playful interactions. Perfect for creating\n        eye-catching, modern interfaces.\n      </p>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Default Blue\n          </h3>\n          <Button title=\"Neobrutalism\" variant=\"neobrutalism\" />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">Pink</h3>\n          <Button\n            title=\"Pink Style\"\n            variant=\"neobrutalism\"\n            neobrutalismColor=\"bg-pink-300\"\n          />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">Green</h3>\n          <Button\n            title=\"Green Style\"\n            variant=\"neobrutalism\"\n            neobrutalismColor=\"bg-green-300\"\n          />\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Disabled\n          </h3>\n          <Button title=\"Disabled\" variant=\"neobrutalism\" disabled />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonWithLucideIconsDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">\n        Buttons with Lucide React Icons\n      </h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n        <Button\n          title=\"Continue\"\n          variant=\"primary\"\n          icon={<ArrowRight className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Save Changes\"\n          variant=\"secondary\"\n          icon={<Save className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Delete Item\"\n          variant=\"destructive\"\n          icon={<Trash className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Download\"\n          variant=\"action\"\n          icon={<Download className=\"w-4 h-4\" />}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonWithPhosphorIconsDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">\n        Buttons with Phosphor Icons\n      </h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n        <Button\n          title=\"Continue\"\n          variant=\"primary\"\n          icon={<PhArrowRight weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Save Changes\"\n          variant=\"secondary\"\n          icon={<FloppyDisk weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Delete Item\"\n          variant=\"destructive\"\n          icon={<TrashSimple weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Download\"\n          variant=\"action\"\n          icon={<DownloadSimple weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonLoadingStatesDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">Loading States</h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n        <Button title=\"Loading...\" variant=\"primary\" isLoading={true} />\n\n        <Button title=\"Loading...\" variant=\"secondary\" isLoading={true} />\n\n        <Button title=\"Loading...\" variant=\"destructive\" isLoading={true} />\n\n        <Button title=\"Loading...\" variant=\"action\" isLoading={true} />\n      </div>\n\n      <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        <Button\n          title=\"Custom Size Spinner\"\n          variant=\"primary\"\n          isLoading={true}\n          spinnerSize={12}\n        />\n\n        <Button\n          title=\"Custom Color Spinner\"\n          variant=\"secondary\"\n          isLoading={true}\n          spinnerColor=\"#ff5500\"\n        />\n\n        <Button\n          title=\"Large Spinner\"\n          variant=\"action\"\n          isLoading={true}\n          spinnerSize={24}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonSizesDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">Custom Sizes via className</h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n        <Button\n          title=\"Small Button\"\n          variant=\"primary\"\n          className=\"py-1 text-xs\"\n          icon={<PhArrowRight weight=\"bold\" className=\"w-3 h-3\" />}\n        />\n\n        <Button\n          title=\"Default Size\"\n          variant=\"primary\"\n          icon={<PhArrowRight weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Large Button\"\n          variant=\"primary\"\n          className=\"py-3 text-base\"\n          icon={<PhArrowRight weight=\"bold\" className=\"w-5 h-5\" />}\n        />\n      </div>\n\n      <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        <Button\n          title=\"Full Width (Default)\"\n          variant=\"secondary\"\n          icon={<FloppyDisk weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n\n        <Button\n          title=\"Custom Width\"\n          variant=\"secondary\"\n          className=\"max-w-[200px] mx-auto\"\n          icon={<FloppyDisk weight=\"bold\" className=\"w-4 h-4\" />}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport function ButtonExtendedClickAreaDemo() {\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">Extended Click Area</h2>\n      <p className=\"text-muted-foreground mb-4\">\n        The buttons below have an extended click area (invisible) that extends\n        beyond their visible boundaries. This makes them easier to click,\n        especially on touch devices.\n      </p>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 mt-8\">\n        <div className=\"flex justify-center\">\n          <Button\n            title=\"Standard Click Area\"\n            variant=\"primary\"\n            className=\"max-w-[200px]\"\n            icon={<ArrowRight className=\"w-4 h-4\" />}\n          />\n        </div>\n\n        <div className=\"flex justify-center\">\n          <Button\n            title=\"Extended Click Area\"\n            variant=\"primary\"\n            className=\"max-w-[200px]\"\n            extendedClickArea={true}\n            icon={<ArrowRight className=\"w-4 h-4\" />}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport function OAuthButtonsDemo() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleEmailClick = () => {\n    setIsLoading(true);\n\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <section>\n      <h2 className=\"text-xl font-semibold mb-4\">OAuth Login Buttons</h2>\n      <div className=\"max-w-md mx-auto flex flex-col gap-3\">\n        <Button\n          title=\"Continue with Google\"\n          variant=\"secondary\"\n          icon={<GoogleIcon />}\n        />\n\n        <Button\n          title=\"Continue with GitHub\"\n          variant=\"secondary\"\n          icon={<GitHubIcon />}\n        />\n\n        <div className=\"relative my-2\">\n          <div className=\"absolute inset-0 flex items-center\">\n            <div className=\"w-full border-t border-border\"></div>\n          </div>\n          <div className=\"relative flex justify-center text-sm\">\n            <span className=\"px-2 bg-background text-muted-foreground\">Or</span>\n          </div>\n        </div>\n\n        <Button\n          title={isLoading ? 'Signing in...' : 'Continue with Email'}\n          variant=\"secondary\"\n          icon={!isLoading && <Mail className=\"w-4 h-4\" />}\n          isLoading={isLoading}\n          onClick={handleEmailClick}\n        />\n      </div>\n\n      <div className=\"mt-4 text-center text-sm text-muted-foreground\">\n        By clicking continue, you agree to our{' '}\n        <a href=\"#\" className=\"underline hover:text-foreground\">\n          Terms of Service\n        </a>{' '}\n        and{' '}\n        <a href=\"#\" className=\"underline hover:text-foreground\">\n          Privacy Policy\n        </a>\n        .\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/components/button-demo.tsx"
    }
  ]
}