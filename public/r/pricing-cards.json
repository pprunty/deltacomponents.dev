{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-cards",
  "type": "registry:component",
  "author": "patrick prunty <https://www.patrickprunty.com>",
  "files": [
    {
      "path": "registry/components/pricing-cards.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\n\nexport interface PricingFeature {\n  text: string\n  included: boolean\n}\n\nexport interface PricingPlan {\n  id: string\n  name: string\n  description?: string\n  price?: {\n    monthly: number\n    yearly: number\n    currency: string\n  }\n  customPrice?: {\n    label: string\n    sublabel?: string\n  }\n  features: PricingFeature[]\n  cta: {\n    text: string\n    variant?: \"default\" | \"outline\" | \"secondary\"\n  }\n  popular?: boolean\n  badge?: string\n  credits?: string\n  billingNote?: string\n}\n\ninterface PricingCardProps {\n  plan: PricingPlan\n  billingCycle: \"monthly\" | \"yearly\"\n  className?: string\n  onSelect?: (planId: string) => void\n}\n\nexport function PricingCard({\n  plan,\n  billingCycle,\n  className,\n  onSelect,\n}: PricingCardProps) {\n  const isPopular = plan.popular\n  const price = plan.price ? plan.price[billingCycle] : null\n  const yearlyDiscount = plan.price\n    ? Math.round((1 - plan.price.yearly / (plan.price.monthly * 12)) * 100)\n    : 0\n\n  return (\n    <Card\n      className={cn(\n        \"relative flex flex-col w-full max-w-sm h-[480px] transition-all duration-200 rounded-3xl\",\n        isPopular && \"border-primary shadow-lg\",\n        isPopular && \"bg-primary text-primary-foreground\",\n        className\n      )}\n      data-card\n    >\n      {plan.badge && (\n        <Badge className=\"absolute -top-3 left-1/2 -translate-x-1/2 px-3 py-1 bg-background border border-border text-foreground font-normal\">\n          {plan.badge}\n        </Badge>\n      )}\n\n      {/* Header Section - Fixed Height */}\n      <CardHeader className=\"pb-4 h-24 flex flex-col justify-start\">\n        <div className=\"flex-1\">\n          <CardTitle\n            className={cn(\n              \"text-2xl font-light font-serif\",\n              isPopular && \"text-primary-foreground\"\n            )}\n          >\n            {plan.name}\n          </CardTitle>\n          {plan.description && (\n            <CardDescription\n              className={cn(\n                \"text-sm mt-2 line-clamp-3\",\n                isPopular && \"text-primary-foreground/80\"\n              )}\n            >\n              {plan.description}\n            </CardDescription>\n          )}\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"flex-1 flex flex-col pb-6\">\n        {/* Price Section - Fixed Height for Alignment */}\n        <div className=\"h-24 mb-6 flex flex-col justify-center\">\n          {plan.customPrice ? (\n            <div>\n              <div\n                className={cn(\n                  \"text-3xl font-light font-serif\",\n                  isPopular && \"text-primary-foreground\"\n                )}\n              >\n                {plan.customPrice.label}\n              </div>\n              {plan.customPrice.sublabel && (\n                <p\n                  className={cn(\n                    \"text-sm text-muted-foreground mt-1\",\n                    isPopular && \"text-primary-foreground/70\"\n                  )}\n                >\n                  {plan.customPrice.sublabel}\n                </p>\n              )}\n            </div>\n          ) : price !== null ? (\n            <div>\n              <div className=\"flex items-baseline gap-1\">\n                <span\n                  className={cn(\n                    \"text-4xl font-light font-serif\",\n                    isPopular && \"text-primary-foreground\"\n                  )}\n                >\n                  {plan.price?.currency}\n                  {price.toLocaleString()}\n                </span>\n                <span\n                  className={cn(\n                    \"text-sm text-muted-foreground\",\n                    isPopular && \"text-primary-foreground/70\"\n                  )}\n                >\n                  /{billingCycle === \"monthly\" ? \"mo\" : \"yr\"}.\n                </span>\n              </div>\n              {plan.billingNote && (\n                <p\n                  className={cn(\n                    \"text-[13px] text-muted-foreground mt-1\",\n                    isPopular && \"text-primary-foreground/70\"\n                  )}\n                >\n                  {plan.billingNote}\n                </p>\n              )}\n            </div>\n          ) : null}\n        </div>\n\n        {/* CTA Button Section - Fixed Position */}\n        <div className=\"mb-6\">\n          <Button\n            className={cn(\n              \"w-full h-11\",\n              isPopular &&\n                \"bg-primary-foreground text-primary hover:bg-primary-foreground\"\n            )}\n            variant={isPopular ? \"secondary\" : \"default\"}\n            onClick={() => onSelect?.(plan.id)}\n          >\n            {plan.cta.text}\n          </Button>\n        </div>\n\n        {/* Features Section - Flexible Height */}\n        <div className=\"flex-1\">\n          <h4\n            className={cn(\n              \"text-sm font-semibold mb-4\",\n              isPopular && \"text-primary-foreground\"\n            )}\n          >\n            What's included\n          </h4>\n          <ul className=\"space-y-1\">\n            {plan.features.map((feature, index) => (\n              <li key={index} className=\"flex items-start gap-2 text-xs\">\n                <Check\n                  className={cn(\n                    \"h-4 w-4 mt-0.5 shrink-0\",\n                    feature.included\n                      ? isPopular\n                        ? \"text-primary-foreground\"\n                        : \"text-primary\"\n                      : \"text-muted-foreground\",\n                    !feature.included && \"opacity-50\"\n                  )}\n                />\n                <span\n                  className={cn(\n                    \"text-sm leading-relaxed\",\n                    isPopular && \"text-primary-foreground\",\n                    !feature.included && \"text-muted-foreground line-through\"\n                  )}\n                >\n                  {feature.text}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport interface ContactCard {\n  title: string\n  description: string\n  cta: {\n    text: string\n    variant?: \"default\" | \"outline\" | \"secondary\"\n  }\n  onContact?: () => void\n}\n\ninterface PricingCardsProps {\n  plans: PricingPlan[]\n  defaultBillingCycle?: \"monthly\" | \"yearly\"\n  showBillingToggle?: boolean\n  yearlyDiscount?: number\n  onPlanSelect?: (planId: string) => void\n  contactCard?: ContactCard\n  className?: string\n}\n\nexport function PricingCards({\n  plans,\n  defaultBillingCycle = \"yearly\",\n  showBillingToggle = true,\n  yearlyDiscount = 20,\n  onPlanSelect,\n  contactCard,\n  className,\n}: PricingCardsProps) {\n  const [billingCycle, setBillingCycle] = useState<\"monthly\" | \"yearly\">(\n    defaultBillingCycle\n  )\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {showBillingToggle && (\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"flex items-center bg-muted rounded-full p-1\">\n            <Button\n              variant={billingCycle === \"monthly\" ? \"default\" : \"ghost\"}\n              size=\"sm\"\n              className=\"rounded-full px-6\"\n              onClick={() => setBillingCycle(\"monthly\")}\n            >\n              Monthly\n            </Button>\n            <Button\n              variant={billingCycle === \"yearly\" ? \"default\" : \"ghost\"}\n              size=\"sm\"\n              className=\"rounded-full px-6 relative\"\n              onClick={() => setBillingCycle(\"yearly\")}\n            >\n              Yearly\n              {yearlyDiscount > 0 && (\n                <span className=\"ml-2 bg-primary text-primary-foreground text-xs px-2 py-0.5 rounded-full\">\n                  -{yearlyDiscount}% off\n                </span>\n              )}\n            </Button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto items-start justify-items-center\">\n        {plans.map((plan) => (\n          <div key={plan.id} className=\"w-full max-w-sm\">\n            <PricingCard\n              plan={plan}\n              billingCycle={billingCycle}\n              onSelect={onPlanSelect}\n            />\n          </div>\n        ))}\n      </div>\n\n      {contactCard && (\n        <div className=\"mt-12 max-w-4xl mx-auto\">\n          <Card className=\"p-6\">\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n              <div className=\"flex-1\">\n                <h3 className=\"text-xl font-semibold mb-2\">\n                  {contactCard.title}\n                </h3>\n                <p className=\"text-muted-foreground\">\n                  {contactCard.description}\n                </p>\n              </div>\n              <Button\n                variant={contactCard.cta.variant || \"default\"}\n                onClick={contactCard.onContact}\n                className=\"md:ml-6\"\n              >\n                {contactCard.cta.text}\n              </Button>\n            </div>\n          </Card>\n        </div>\n      )}\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "/delta/pricing-cards.tsx"
    }
  ]
}
