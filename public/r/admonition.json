{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "admonition",
  "type": "registry:component",
  "title": "Admonition",
  "description": "A component for admonition",
  "dependencies": [
    "@phosphor-icons/react"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "delta/components/admonition.tsx",
      "content": "import type React from 'react';\nimport {\n  Info,\n  LightbulbFilament,\n  Warning,\n  X,\n  Note,\n} from '@phosphor-icons/react/dist/ssr';\nimport { cn } from '@/lib/utils';\n\ntype AdmonitionType = 'note' | 'tip' | 'info' | 'warning' | 'danger';\n\ninterface AdmonitionProps {\n  type?: AdmonitionType;\n  title?: string;\n  children: React.ReactNode;\n  className?: string;\n  icon?: React.ReactNode;\n  solid?: boolean;\n  variant?: 'default' | 'outline';\n}\n\nconst icons: Record<\n  AdmonitionType,\n  React.ComponentType<{ className?: string }>\n> = {\n  note: Note,\n  tip: LightbulbFilament,\n  info: Info,\n  warning: Warning,\n  danger: X,\n};\n\nconst styles = {\n  note: {\n    container: 'border-l-4 border-slate-500 dark:border-slate-400',\n    bg: 'bg-slate-50 dark:bg-slate-900/50',\n    solid:\n      'bg-slate-400 dark:bg-slate-700 text-white dark:text-white border-l-4 border-slate-500 dark:border-slate-800',\n    icon: 'text-slate-500 dark:text-slate-400',\n    title: 'text-slate-700 dark:text-slate-300',\n    defaultIcon: <Note className=\"h-5 w-5\" />,\n    outline: 'border border-slate-400 dark:border-slate-300',\n  },\n  tip: {\n    container: 'border-l-4 border-green-500 dark:border-green-400',\n    bg: 'bg-green-50 dark:bg-green-950/50',\n    solid:\n      'bg-green-400 dark:bg-green-700 text-white dark:text-white border-l-4 border-green-500 dark:border-green-800',\n    icon: 'text-green-500 dark:text-green-400',\n    title: 'text-green-700 dark:text-green-300',\n    defaultIcon: <LightbulbFilament className=\"h-5 w-5\" />,\n    outline: 'border border-green-400 dark:border-green-300',\n  },\n  info: {\n    container: 'border-l-4 border-blue-500 dark:border-blue-400',\n    bg: 'bg-blue-50 dark:bg-blue-950/50',\n    solid:\n      'bg-blue-400 dark:bg-blue-700 text-white dark:text-white border-l-4 border-blue-500 dark:border-blue-800',\n    icon: 'text-blue-500 dark:text-blue-400',\n    title: 'text-blue-700 dark:text-blue-300',\n    defaultIcon: <Info className=\"h-5 w-5\" />,\n    outline: 'border border-blue-400 dark:border-blue-300',\n  },\n  warning: {\n    container: 'border-l-4 border-amber-500 dark:border-amber-400',\n    bg: 'bg-amber-50 dark:bg-amber-950/50',\n    solid:\n      'bg-amber-400 dark:bg-amber-700 text-white dark:text-white border-l-4 border-amber-500 dark:border-amber-800',\n    icon: 'text-amber-500 dark:text-amber-400',\n    title: 'text-amber-700 dark:text-amber-300',\n    defaultIcon: <Warning className=\"h-5 w-5\" />,\n    outline: 'border border-amber-400 dark:border-amber-300',\n  },\n  danger: {\n    container: 'border-l-4 border-red-500 dark:border-red-400',\n    bg: 'bg-red-50 dark:bg-red-950/50',\n    solid:\n      'bg-red-400 dark:bg-red-700 text-white dark:text-white border-l-4 border-red-500 dark:border-red-800',\n    icon: 'text-red-500 dark:text-red-400',\n    title: 'text-red-700 dark:text-red-300',\n    defaultIcon: <X className=\"h-5 w-5\" />,\n    outline: 'border border-red-400 dark:border-red-300',\n  },\n};\n\nconst defaultTitle = {\n  note: 'Note',\n  tip: 'Tip',\n  info: 'Info',\n  warning: 'Warning',\n  danger: 'Danger',\n};\n\nexport function Admonition({\n  type = 'info',\n  title,\n  children,\n  className,\n  icon,\n  solid = false,\n  variant = 'default',\n}: AdmonitionProps) {\n  const Icon = icons[type] || icons.info;\n  const style = styles[type] || styles.info;\n\n  const displayTitle = title || defaultTitle[type] || defaultTitle.info;\n  const displayIcon = icon || <Icon className=\"h-5 w-5\" />;\n\n  return (\n    <div\n      className={cn(\n        'p-4 my-6 shadow-sm',\n        variant === 'outline' ? 'rounded-md border' : 'rounded-r-md',\n        variant === 'outline' ? style.outline : style.container,\n        solid ? style.solid : style.bg,\n        className,\n      )}\n      role=\"alert\"\n    >\n      <div className=\"flex items-start gap-3\">\n        <div\n          className={cn(\n            'flex-shrink-0 mt-0.5',\n            solid ? 'text-white' : style.icon,\n          )}\n        >\n          {displayIcon}\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          {displayTitle && (\n            <h3\n              className={cn(\n                'font-medium text-base mb-1',\n                solid ? 'text-white' : style.title,\n              )}\n            >\n              {displayTitle}\n            </h3>\n          )}\n          <div\n            className={cn(\n              'text-sm leading-relaxed',\n              solid ? 'text-white' : 'text-slate-700 dark:text-slate-300',\n            )}\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/components/admonition.tsx"
    },
    {
      "path": "delta/examples/admonition-basic-demo.tsx",
      "content": "import { Admonition } from '@/delta/components/admonition';\n\nexport default function AdmonitionBasicDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Admonition type=\"info\">\n        This is an informational message that provides additional context or\n        details.\n      </Admonition>\n      <Admonition type=\"note\">\n        Here's an important note about this feature.\n      </Admonition>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/examples/admonition-basic-demo.tsx"
    },
    {
      "path": "delta/examples/admonition-solid-demo.tsx",
      "content": "'use client';\n\nimport { Admonition } from '@/delta/components/admonition';\n\nexport default function AdmonitionSolidDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Admonition type=\"note\" solid>\n        This is a note with a solid background. Use it for general information\n        that doesn't fit other categories.\n      </Admonition>\n\n      <Admonition type=\"tip\" solid>\n        This is a tip with a solid background. Great for sharing helpful\n        suggestions and best practices.\n      </Admonition>\n\n      <Admonition type=\"info\" solid>\n        This is an info message with a solid background. Perfect for providing\n        additional context or details.\n      </Admonition>\n\n      <Admonition type=\"warning\" solid>\n        This is a warning with a solid background. Use it to alert users about\n        potential issues or important considerations.\n      </Admonition>\n\n      <Admonition type=\"danger\" solid>\n        This is a danger message with a solid background. Ideal for critical\n        issues that require immediate attention.\n      </Admonition>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/examples/admonition-solid-demo.tsx"
    },
    {
      "path": "delta/examples/admonition-types-demo.tsx",
      "content": "import { Admonition } from '@/delta/components/admonition';\n\nexport default function AdmonitionTypesDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Admonition type=\"note\">\n        This is a note that helps explain important concepts or provides\n        additional context.\n      </Admonition>\n\n      <Admonition type=\"tip\">\n        Here's a helpful tip that can improve your workflow or understanding.\n      </Admonition>\n\n      <Admonition type=\"info\">\n        This is an informational message providing useful details about the\n        topic.\n      </Admonition>\n\n      <Admonition type=\"warning\">\n        Be careful! This warning highlights potential issues you should be aware\n        of.\n      </Admonition>\n\n      <Admonition type=\"danger\">\n        Attention required! This indicates a dangerous or breaking change that\n        needs immediate attention.\n      </Admonition>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/examples/admonition-types-demo.tsx"
    },
    {
      "path": "delta/examples/admonition-titles-demo.tsx",
      "content": "import { Admonition } from '@/delta/components/admonition';\n\nexport default function AdmonitionTitlesDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Admonition type=\"info\" title=\"Did you know?\">\n        You can add titles to your admonitions to provide additional context and\n        make them more informative.\n      </Admonition>\n      <Admonition type=\"tip\" title=\"Great job!\">\n        Your changes have been saved successfully. The system is now up to date.\n      </Admonition>\n      <Admonition type=\"warning\" title=\"Important Notice\">\n        Please review these changes carefully before proceeding with the next\n        steps.\n      </Admonition>\n      <Admonition type=\"danger\" title=\"Action Required\">\n        We encountered an issue processing your request. Please try again or\n        contact support.\n      </Admonition>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/examples/admonition-titles-demo.tsx"
    },
    {
      "path": "delta/examples/admonition-custom-icons-demo.tsx",
      "content": "import { Admonition } from '@/delta/components/admonition';\nimport { Lightbulb, Rocket, Shield, Zap } from 'lucide-react';\n\nexport default function AdmonitionCustomIconsDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Admonition type=\"info\" icon={<Lightbulb className=\"h-5 w-5\" />}>\n        Custom icons can help make your admonitions more visually distinctive\n        and memorable.\n      </Admonition>\n      <Admonition type=\"tip\" icon={<Rocket className=\"h-5 w-5\" />}>\n        Using custom icons is a great way to add personality to your\n        application's notifications.\n      </Admonition>\n      <Admonition type=\"warning\" icon={<Shield className=\"h-5 w-5\" />}>\n        Remember to choose icons that are clear and easily recognizable for your\n        users.\n      </Admonition>\n      <Admonition type=\"danger\" icon={<Zap className=\"h-5 w-5\" />}>\n        Custom icons should maintain good contrast and be visible against the\n        admonition background.\n      </Admonition>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "delta/examples/admonition-custom-icons-demo.tsx"
    }
  ]
}