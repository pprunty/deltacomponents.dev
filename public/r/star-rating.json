{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "star-rating",
  "type": "registry:component",
  "files": [
    {
      "path": "registry/components/star-rating.tsx",
      "content": "\"use client\"\n\nimport React, { useState } from \"react\"\n\ninterface StarRatingProps {\n  initialValue?: number // Initial rating value (optional)\n  onChange?: (value: number) => void // Callback when rating changes (optional)\n  locked?: boolean // Whether the rating is locked (default: true)\n  showScore?: boolean // Show score in brackets (e.g., 4.2/5)\n}\n\nconst StarRating: React.FC<StarRatingProps> = ({\n  initialValue = 0,\n  onChange,\n  locked = true, // Default to locked\n  showScore = false,\n}) => {\n  const [rating, setRating] = useState(initialValue)\n  const roundedScore = Math.round((rating + Number.EPSILON) * 10) / 10\n\n  const handleClick = (value: number) => {\n    if (!locked) {\n      setRating(value)\n      if (onChange) {\n        onChange(value)\n      }\n    }\n  }\n\n  // Calculate fill for each star\n  const getFill = (index: number) => {\n    if (index <= Math.floor(rating)) return 1\n    if (index === Math.ceil(rating) && rating % 1 !== 0) return rating % 1\n    return 0\n  }\n\n  return (\n    <div className=\"flex items-center py-2\">\n      {[1, 2, 3, 4, 5].map((index) => (\n        <Star\n          key={index}\n          fill={getFill(index)}\n          onClick={() => handleClick(index)}\n          locked={locked}\n        />\n      ))}\n      {showScore && (\n        <span className=\"ml-2 text-sm text-muted-foreground\">\n          ({roundedScore}/5)\n        </span>\n      )}\n    </div>\n  )\n}\n\ninterface StarProps {\n  fill: number // 0 to 1, how much of the star is filled\n  onClick: () => void\n  locked: boolean\n}\n\nconst Star: React.FC<StarProps> = ({ fill, onClick, locked }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"20px\"\n      width=\"20px\"\n      viewBox=\"0 0 47.94 47.94\"\n      className=\"mr-2\"\n      onClick={!locked ? onClick : undefined}\n      style={{ cursor: locked ? \"default\" : \"pointer\" }}\n    >\n      <defs>\n        <linearGradient id=\"star-gradient\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n          <stop offset={fill} stopColor=\"#ED8A19\" />\n          <stop offset={fill} stopColor=\"#D3D3D3\" />\n        </linearGradient>\n      </defs>\n      <path\n        style={{\n          fill: `url(#star-gradient)`,\n          transition: \"fill 0.3s ease-in-out\",\n        }}\n        d=\"M26.285,2.486l5.407,10.956c0.376,0.762,1.103,1.29,1.944,1.412l12.091,1.757  c2.118,0.308,2.963,2.91,1.431,4.403l-8.749,8.528c-0.608,0.593-0.886,1.448-0.742,2.285l2.065,12.042  c0.362,2.109-1.852,3.717-3.746,2.722l-10.814-5.685c-0.752-0.395-1.651-0.395-2.403,0l-10.814,5.685  c-1.894,0.996-4.108-0.613-3.746-2.722l2.065-12.042c0.144-0.837-0.134-1.692-0.742-2.285l-8.749-8.528  c-1.532-1.494-0.687-4.096,1.431-4.403l12.091-1.757c0.841-0.122,1.568-0.65,1.944-1.412l5.407-10.956  C22.602,0.567,25.338,0.567,26.285,2.486z\"\n      />\n    </svg>\n  )\n}\n\nexport default StarRating\n",
      "type": "registry:component"
    }
  ]
}